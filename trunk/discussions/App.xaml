<Application x:Class="Discussions.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:s="http://schemas.microsoft.com/surface/2008"
             xmlns:Custom="http://schemas.microsoft.com/surface/2008"
             xmlns:t="clr-namespace:QuickZip.Tools;assembly=CloudStorage"
             Startup="Application_Startup"
             xmlns:local="clr-namespace:Discussions"
             StartupUri="Main.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/LoginEngine;component/Metro/BlueSkin.xaml" />
                <ResourceDictionary Source="pack://application:,,,/LoginEngine;component/Metro/GreenSkin.xaml" />
                <ResourceDictionary Source="pack://application:,,,/LoginEngine;component/Metro/PurpleSkin.xaml" />
                <ResourceDictionary Source="pack://application:,,,/LoginEngine;component/Metro/RedSkin.xaml" />
                <ResourceDictionary Source="pack://application:,,,/LoginEngine;component/Metro/Blue2Skin.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <SolidColorBrush x:Key="WndBg" Color="#FFE8E8E8" />

            <t:FileToIconConverter x:Key="iconConv" />

            <BitmapImage x:Key="gdocExcel" UriSource="Resources/gdocExcel.png" />
            <BitmapImage x:Key="gdocPowerPoint" UriSource="Resources/gdocPowerPoint.png" />
            <BitmapImage x:Key="gdocWord" UriSource="Resources/gdocWord.png" />

            <Style TargetType="Label">
                <Setter Property="FontSize" Value="17" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="FontFamily" Value="Segoe UI Light" />
            </Style>

            <Style TargetType="{x:Type TextElement}">
                <Setter Property="FontFamily" Value="Segoe UI Light" />
            </Style>

            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="FontFamily" Value="Segoe UI Light" />
            </Style>

            <Style x:Key="roundButtonStyle" TargetType="{x:Type s:SurfaceButton}">
                <Setter Property="FontFamily" Value="Segoe UI Light" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Grid x:Name="Grid" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <Rectangle x:Name="ButtonBody" Fill="{TemplateBinding Background}"
                                           SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RadiusX="5"
                                           RadiusY="5" />
                                <Rectangle x:Name="PressOverlay" Fill="LightBlue" Opacity="0"
                                           SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RadiusX="5"
                                           RadiusY="5" />
                                <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  Content="{TemplateBinding Content}"
                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames BeginTime="0"
                                                                               Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                               Storyboard.TargetName="PressOverlay">
                                                    <SplineDoubleKeyFrame KeyTime="0:0:0.1" Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames BeginTime="0"
                                                                               Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                               Storyboard.TargetName="PressOverlay">
                                                    <SplineDoubleKeyFrame KeyTime="0:0:0.15" Value="0" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                    <Setter Property="Foreground"
                                            Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Fill" TargetName="ButtonBody"
                                            Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                                    <Setter Property="Foreground"
                                            Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                                    <Setter Property="Opacity" TargetName="Content" Value="0.33" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type s:SurfaceTextBox}">
                <Setter Property="FontFamily" Value="Segoe UI Light" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Custom:SurfaceTextBox}">
                            <Grid>
                                <Border x:Name="TextBoxBody" BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" CornerRadius="5">
                                    <Grid>
                                        <Custom:SurfaceScrollViewer x:Name="PART_ContentHost"
                                                                    Margin="{TemplateBinding Padding}">
                                            <Custom:SurfaceScrollViewer.Style>
                                                <Style TargetType="{x:Type Custom:SurfaceScrollViewer}">
                                                    <Setter Property="IsManipulationEnabled" Value="False" />
                                                    <Setter Property="PanningMode" Value="None" />
                                                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                                                    <Setter Property="VerticalAlignment" Value="Stretch" />
                                                    <Setter Property="VerticalContentAlignment" Value="Top" />
                                                </Style>
                                            </Custom:SurfaceScrollViewer.Style>
                                        </Custom:SurfaceScrollViewer>
                                    </Grid>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsFocused" Value="True" />
                                        <Condition Property="IsEnabled" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="BorderBrush"
                                            Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                                    <Setter Property="Background"
                                            Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                                    <Setter Property="Foreground"
                                            Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background"
                                            Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                                    <Setter Property="Foreground"
                                            Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                                    <Setter Property="BorderBrush"
                                            Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                                    <Setter Property="Opacity" TargetName="PART_ContentHost" Value="0.33" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="SurfaceListBoxItemStyle1" TargetType="{x:Type Custom:SurfaceListBoxItem}">
                <Setter Property="Background"
                        Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                <Setter Property="Foreground"
                        Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="HorizontalContentAlignment"
                        Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Custom:SurfaceListBoxItem}">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="Press">
                                    <DoubleAnimationUsingKeyFrames BeginTime="0"
                                                                   Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                   Storyboard.TargetName="PressOverlay">
                                        <SplineDoubleKeyFrame KeyTime="0:0:0.1" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="Release">
                                    <DoubleAnimationUsingKeyFrames BeginTime="0"
                                                                   Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                   Storyboard.TargetName="PressOverlay">
                                        <SplineDoubleKeyFrame KeyTime="0:0:0.25" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <Grid x:Name="Grid" Background="Transparent"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <Border x:Name="ButtonBody" CornerRadius="5"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        Background="{TemplateBinding Background}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" BorderThickness="0" />
                                <Border x:Name="PressOverlay" CornerRadius="5"
                                        Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}"
                                        Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  Content="{TemplateBinding Content}"
                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" TargetName="ButtonBody" Value="#FFF9F9F9" />
                                    <Setter Property="Background" TargetName="PressOverlay" Value="LightBlue" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames BeginTime="0"
                                                                               Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                               Storyboard.TargetName="PressOverlay">
                                                    <SplineDoubleKeyFrame KeyTime="0:0:0.1" Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames BeginTime="0"
                                                                               Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                               Storyboard.TargetName="PressOverlay">
                                                    <SplineDoubleKeyFrame KeyTime="0:0:0.25" Value="0" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                    <Setter Property="Foreground"
                                            Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsEnabled" Value="False" />
                                        <Condition Property="IsSelected" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="ButtonBody"
                                            Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                                    <Setter Property="Foreground"
                                            Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                                    <Setter Property="Opacity" TargetName="Content" Value="0.6" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsEnabled" Value="False" />
                                        <Condition Property="IsSelected" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="ButtonBody"
                                            Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                                    <Setter Property="Foreground"
                                            Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                                    <Setter Property="Opacity" TargetName="Content" Value="0.33" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.BasedOn>
                    <Style TargetType="{x:Type Control}">
                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                        <Setter Property="SnapsToDevicePixels" Value="False" />
                        <Setter Property="FontFamily" Value="Segoe360" />
                        <Setter Property="FontWeight" Value="Normal" />
                        <Setter Property="FontSize" Value="17" />
                        <Setter Property="Padding" Value="6,2,10,10" />
                        <Setter Property="MinHeight" Value="38" />
                        <Setter Property="MinWidth" Value="38" />
                        <Setter Property="Margin" Value="1" />
                        <Setter Property="HorizontalContentAlignment" Value="Left" />
                        <Setter Property="VerticalContentAlignment" Value="Top" />
                        <Setter Property="BorderThickness" Value="2" />
                    </Style>
                </Style.BasedOn>
            </Style>

            <BitmapImage x:Key="FolderIcon" UriSource="Resources/folder128.png" />
            <ImageBrush x:Key="msOffice" ImageSource="Resources/office.png" Stretch="Uniform" />
            <ImageBrush x:Key="msWord" ImageSource="Resources/WordIcon.png" Stretch="Uniform" />
            <ImageBrush x:Key="msPowerPoint" ImageSource="Resources/PowerpointIcon.png" Stretch="Uniform" />
            <ImageBrush x:Key="msExcel" ImageSource="Resources/ExcelIcon.png" Stretch="Uniform" />
            <ImageBrush x:Key="explanation" ImageSource="Resources/profile_group.png" Stretch="Uniform" />
            <ImageBrush x:Key="keyboard" ImageSource="Resources/keyboard.png" Stretch="Uniform" />
            <ImageBrush x:Key="save" ImageSource="Resources/save.png" Stretch="Uniform" />
            <ImageBrush x:Key="eraser" ImageSource="Resources/eraser.png" Stretch="Uniform" />
            <ImageBrush x:Key="pen" ImageSource="Resources/pen.png" Stretch="Uniform" />
            <ImageBrush x:Key="home" ImageSource="Resources/home.png" Stretch="Uniform" />
            <ImageBrush x:Key="enlarge2" ImageSource="Resources/enlarge2.png" Stretch="Uniform" />
            <ImageBrush x:Key="enlarge2white" ImageSource="Resources/enlarge2white.png" Stretch="Uniform" />
            <ImageBrush x:Key="decrease2" ImageSource="Resources/decrease2.png" Stretch="Uniform" />
            <ImageBrush x:Key="private" ImageSource="Resources/private.png" Stretch="Uniform" />
            <ImageBrush x:Key="book" ImageSource="Resources/book.png" Stretch="Uniform" />
            <ImageBrush x:Key="camera" ImageSource="Resources/Camera.png" Stretch="Uniform" />
            <ImageBrush x:Key="annotations" ImageSource="Resources/annotations.png" Stretch="Uniform" />
            <ImageBrush x:Key="flower" ImageSource="Resources/flower.png" Stretch="Uniform" />
            <ImageBrush x:Key="ytIcon" ImageSource="Resources/yt.png" Stretch="Uniform" />
            <ImageBrush x:Key="enlarge" ImageSource="Resources/enlarge.png" Stretch="Uniform" />
            <ImageBrush x:Key="decrease" ImageSource="Resources/decrease.png" Stretch="Uniform" />
            <ImageBrush x:Key="infoBrush" ImageSource="Resources/information.png" Stretch="Uniform" />
            <ImageBrush x:Key="transferBrush" ImageSource="Resources/swap.png" Stretch="Uniform" />
            <ImageBrush x:Key="editBrush" ImageSource="Resources/edit.png" Stretch="Uniform" />
            <ImageBrush x:Key="typeBrush" ImageSource="Resources/word.png" Stretch="Uniform" />
            <ImageBrush x:Key="minusBrush" ImageSource="Resources/minus.png" Stretch="Uniform" />
            <ImageBrush x:Key="addBrush" ImageSource="Resources/add.png" Stretch="Uniform" />
            <ImageBrush x:Key="backArrow" ImageSource="Resources/back.png" Stretch="Uniform" />
            <ImageBrush x:Key="nextArrow" ImageSource="Resources/next.png" Stretch="Uniform" />
            <ImageBrush x:Key="next" ImageSource="Resources/next.png" Stretch="Uniform" />
            <ImageBrush x:Key="refresh" ImageSource="Resources/refresh.png" Stretch="Uniform" />
            <ImageBrush x:Key="RecBin" ImageSource="Resources/Image1.png" Stretch="Uniform" />
            <ImageBrush x:Key="Globe" ImageSource="Resources/globe.png" Stretch="Uniform" />
            <ImageBrush x:Key="ErrorIcon" ImageSource="Resources/Error-icon.png" Stretch="Uniform" />
            <ImageBrush x:Key="AcceptIcon" ImageSource="Resources/accept-icon.png" Stretch="Uniform" />
            <ImageBrush x:Key="PrivIcon" ImageSource="Resources/privateIcon.png" Stretch="Uniform" />
            <ImageBrush x:Key="refreshIcon" ImageSource="Resources/loop2.png" Stretch="Uniform" />

            <SolidColorBrush x:Key="bgColor" Color="#FFFFA0A0" />
            <SolidColorBrush x:Key="linkColor" Color="#FF8296F2" />
            <SolidColorBrush x:Key="frmGrayBg" Color="#FFCFCFCF" />
            <local:ARGBColorBrushConvertor x:Key="brushConverter" />
            <Style TargetType="{x:Type Run}" x:Key="runWithSourcesStyle">
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Foreground" Value="#FFBAF4B0" />
            </Style>
            <local:AttachToImageConvertor x:Key="attachImgConverter" />
            <DrawingBrush x:Key="bgLines" TileMode="Tile" Stretch="None"
                          Viewport="0,0,9,9" ViewportUnits="Absolute">
                <DrawingBrush.Drawing>
                    <GeometryDrawing>
                        <GeometryDrawing.Pen>
                            <Pen Brush="Gray" Thickness="0.1" />
                        </GeometryDrawing.Pen>
                        <GeometryDrawing.Geometry>
                            <LineGeometry StartPoint="0,9"
                                          EndPoint="9,0" />
                        </GeometryDrawing.Geometry>
                    </GeometryDrawing>
                </DrawingBrush.Drawing>
            </DrawingBrush>

            <LinearGradientBrush x:Key="CheckRadioFillNormal">
                <GradientStop Color="#FFD2D4D2" Offset="0" />
                <GradientStop Color="#FFFFFFFF" Offset="1" />
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="CheckRadioStrokeNormal">
                <GradientStop Color="#FF004C94" Offset="0" />
                <GradientStop Color="#FF003C74" Offset="1" />
            </LinearGradientBrush>

            <Style x:Key="StrokeThicknessRadioButtonStyle" TargetType="{x:Type RadioButton}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="Background" Value="{StaticResource CheckRadioFillNormal}" />
                <Setter Property="BorderBrush" Value="{StaticResource CheckRadioStrokeNormal}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RadioButton}">
                            <Grid Width="40" Height="38">
                                <Rectangle Opacity="0" Stroke="#FF979797" RadiusX="2" RadiusY="2"
                                           HorizontalAlignment="Stretch" Margin="0,0,0,0" x:Name="rectangle"
                                           VerticalAlignment="Stretch">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush EndPoint="0.55,1" StartPoint="0.55,0.026">
                                            <GradientStop Color="#FF979797" Offset="0" />
                                            <GradientStop Color="#FFFFFFFF" Offset="1" />
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Ellipse Fill="#FF000000" Stroke="{x:Null}" HorizontalAlignment="Center"
                                         Margin="0,0,0,0" VerticalAlignment="Center" Width="{TemplateBinding FontSize}"
                                         Height="{TemplateBinding FontSize}" />
                                <Rectangle Opacity="0" Stroke="{x:Null}" RadiusX="2" RadiusY="2"
                                           x:Name="rectangle_Copy" Margin="1.749,0.763,1.964,2.765">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush EndPoint="0.558,0.989" StartPoint="0.55,0.026">
                                            <GradientStop Color="#91FFFFFF" Offset="0" />
                                            <GradientStop Color="#16FFFFFF" Offset="0.447" />
                                            <GradientStop Color="#89FFFFFF" Offset="0.288" />
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Opacity" TargetName="rectangle" Value="0.995" />
                                    <Setter Property="Opacity" TargetName="rectangle_Copy" Value="1" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Fill" TargetName="rectangle">
                                        <Setter.Value>
                                            <LinearGradientBrush EndPoint="0.55,1" StartPoint="0.55,0.026">
                                                <GradientStop Color="#FF438A7E" Offset="0" />
                                                <GradientStop Color="#FFD6F2ED" Offset="1" />
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Opacity" TargetName="rectangle" Value="1" />
                                    <Setter Property="Opacity" TargetName="rectangle_Copy" Value="1" />
                                    <Setter Property="Stroke" TargetName="rectangle" Value="#FF3C6A62" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Stroke" TargetName="rectangle" Value="#FF6A6A6A" />
                                    <Setter Property="Fill" TargetName="rectangle">
                                        <Setter.Value>
                                            <LinearGradientBrush EndPoint="0.55,1" StartPoint="0.55,0.026">
                                                <GradientStop Color="#FF686868" Offset="0" />
                                                <GradientStop Color="#FFBFBFBF" Offset="1" />
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Opacity" TargetName="rectangle" Value="1" />
                                    <Setter Property="Opacity" TargetName="rectangle_Copy" Value="1" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground"
                                            Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>