<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:Custom="http://schemas.microsoft.com/surface/2008" 
             xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing" 
             x:Class="DistributedEditor.Palette" 
             xmlns:Petzold="clr-namespace:Petzold.Media2D"              
             mc:Ignorable="d" 
             d:DesignHeight="644" d:DesignWidth="400">
	<UserControl.Resources>
		<Style x:Key="CircularSurfaceToggleButtonStyle1" TargetType="{x:Type Custom:SurfaceToggleButton}">
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="7"/>
			<Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}"/> 
			<Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}"/>
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Custom:SurfaceToggleButton}">
						<ControlTemplate.Resources>
							<Storyboard x:Key="Press">
								<DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressOverlay">
									<SplineDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="Release">
								<DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressOverlay">
									<SplineDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
						</ControlTemplate.Resources>
						<Grid x:Name="Grid" Background="Transparent" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
							<Border x:Name="ButtonBody" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							<Border x:Name="PressOverlay" Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							<ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsChecked" Value="True">
								<Setter Property="Background" TargetName="ButtonBody" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}"/>
								<Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="True">
								<Trigger.EnterActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressOverlay">
												<SplineDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</BeginStoryboard>
								</Trigger.EnterActions>
								<Trigger.ExitActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressOverlay">
												<SplineDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</BeginStoryboard>
								</Trigger.ExitActions>
								<Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}"/>
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsPressed" Value="True"/>
									<Condition Property="IsChecked" Value="True"/>
								</MultiTrigger.Conditions>
								<Setter Property="Background" TargetName="PressOverlay" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsEnabled" Value="False"/>
									<Condition Property="IsChecked" Value="True"/>
								</MultiTrigger.Conditions>
								<Setter Property="Background" TargetName="ButtonBody" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}"/>
								<Setter Property="Opacity" TargetName="Content" Value="0.6"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsEnabled" Value="False"/>
									<Condition Property="IsChecked" Value="False"/>
								</MultiTrigger.Conditions>
								<Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}"/>
								<Setter Property="Background" TargetName="ButtonBody" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}"/>
								<Setter Property="Opacity" TargetName="Content" Value="0.33"/>
							</MultiTrigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.BasedOn>
				<Style TargetType="{x:Type Control}">
					<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
					<Setter Property="SnapsToDevicePixels" Value="False"/>
					<Setter Property="FontFamily" Value="Segoe360"/>
					<Setter Property="FontWeight" Value="Normal"/>
					<Setter Property="FontSize" Value="17"/>
					<Setter Property="Padding" Value="6,2,10,10"/>
					<Setter Property="MinHeight" Value="38"/>
					<Setter Property="MinWidth" Value="38"/>
					<Setter Property="Margin" Value="1"/>
					<Setter Property="HorizontalContentAlignment" Value="Left"/>
					<Setter Property="VerticalContentAlignment" Value="Top"/>
					<Setter Property="BorderThickness" Value="2"/>
				</Style>
			</Style.BasedOn>
		</Style>
		<Style x:Key="BtnFocusControlStyle1" TargetType="{x:Type Control}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Control}">
						<Grid/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="SurfaceToggleButtonStyle1" TargetType="{x:Type Custom:SurfaceToggleButton}">
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="7"/>
			<Setter Property="Background" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}"/>
			<Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}"/>
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Custom:SurfaceToggleButton}">
						<ControlTemplate.Resources>
							<Storyboard x:Key="Press">
								<DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressOverlay">
									<SplineDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="Release">
								<DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressOverlay">
									<SplineDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
						</ControlTemplate.Resources>
						<Grid x:Name="Grid" Background="Transparent" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
							<Border x:Name="ButtonBody" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							<Border x:Name="PressOverlay" Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							<ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsChecked" Value="True">
								<Setter Property="Background" TargetName="ButtonBody" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}"/>
								<Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="True">
								<Trigger.EnterActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressOverlay">
												<SplineDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</BeginStoryboard>
								</Trigger.EnterActions>
								<Trigger.ExitActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressOverlay">
												<SplineDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</BeginStoryboard>
								</Trigger.ExitActions>
								<Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}"/>
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsPressed" Value="True"/>
									<Condition Property="IsChecked" Value="True"/>
								</MultiTrigger.Conditions>
								<Setter Property="Background" TargetName="PressOverlay" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsEnabled" Value="False"/>
									<Condition Property="IsChecked" Value="True"/>
								</MultiTrigger.Conditions>
								<Setter Property="Background" TargetName="ButtonBody" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}"/>
								<Setter Property="Opacity" TargetName="Content" Value="0.6"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsEnabled" Value="False"/>
									<Condition Property="IsChecked" Value="False"/>
								</MultiTrigger.Conditions>
								<Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}"/>
								<Setter Property="Background" TargetName="ButtonBody" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}"/>
								<Setter Property="Opacity" TargetName="Content" Value="0.33"/>
							</MultiTrigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.BasedOn>
				<Style TargetType="{x:Type Control}">
					<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
					<Setter Property="SnapsToDevicePixels" Value="False"/>
					<Setter Property="FontFamily" Value="Segoe360"/>
					<Setter Property="FontWeight" Value="Normal"/>
					<Setter Property="FontSize" Value="17"/>
					<Setter Property="Padding" Value="6,2,10,10"/>
					<Setter Property="MinHeight" Value="38"/>
					<Setter Property="MinWidth" Value="38"/>
					<Setter Property="Margin" Value="1"/>
					<Setter Property="HorizontalContentAlignment" Value="Left"/>
					<Setter Property="VerticalContentAlignment" Value="Top"/>
					<Setter Property="BorderThickness" Value="2"/>
				</Style>
			</Style.BasedOn>
		</Style>
	</UserControl.Resources>
    <Grid Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center">
    	<Ellipse x:Name="outerEllipse" HorizontalAlignment="Center"  Height="250" StrokeThickness="2" VerticalAlignment="Center" Width="250" Fill="#FF8D8D8D" Stroke="#FFB6B6B6">
    		<Ellipse.Effect>
    			<DropShadowEffect BlurRadius="38"/>
    		</Ellipse.Effect>
    	</Ellipse>
    	<Ellipse x:Name="inner" HorizontalAlignment="Left" Height="110" Margin="138.5,271,0,0" Stroke="#FFAAAAAA" VerticalAlignment="Top" Width="110" StrokeThickness="2"/>    	
		<Custom:SurfaceToggleButton x:Name="btnSegment" Background="Transparent"  Width="60" Height="60" Click="btnSegment_Click" Margin="86.75,241.833,242.75,342.166" d:LayoutOverrides="VerticalMargin" Style="{DynamicResource CircularSurfaceToggleButtonStyle1}">
    		<Line
    			X1="10" Y1="10"
    			X2="30" Y2="50"
    			Stroke="Black"
    			StrokeThickness="4"/>
    	</Custom:SurfaceToggleButton>
    	<Custom:SurfaceToggleButton x:Name="btnFreeForm" Background="Transparent" Width="60" Height="60" Click="btnFreeForm_Click" Margin="166.75,293,162.75,291" Style="{DynamicResource CircularSurfaceToggleButtonStyle1}">
    		<Canvas>
    			<Path Stroke="Black" StrokeThickness="4" 
    				Data="M 1,10 C 15,70 30,-20 35,50" Canvas.Left="-23.334" Canvas.Top="-24.667"/>
    		</Canvas>
    	</Custom:SurfaceToggleButton>
    	<Custom:SurfaceToggleButton x:Name="btnArrow" Background="Transparent" Width="60" Height="60" Click="btnArrow_Click" Margin="156.75,201,172.75,383" Style="{DynamicResource CircularSurfaceToggleButtonStyle1}">
    		<Petzold:ArrowLine
    			X1="10" Y1="10"
    			X2="40" Y2="40"
    			Stroke="Black"
    			StrokeThickness="4"/>
    	</Custom:SurfaceToggleButton>
    	<Custom:SurfaceToggleButton x:Name="btnText" Background="Transparent" Width="60" Height="60" Click="btnText_Click" Margin="73.5,320.739,256,263.261" Style="{DynamicResource CircularSurfaceToggleButtonStyle1}">
    		<Canvas>
    			<Label Content="T" FontSize="36" Foreground="Black" HorizontalAlignment="Center" Canvas.Left="-12" Canvas.Top="-29"/>
    		</Canvas>
    	</Custom:SurfaceToggleButton>
    	<Custom:SurfaceToggleButton x:Name="btnRemove" Background="Transparent" Width="60" Height="60" Click="btnRemove_Click" Margin="203.75,379.25,125.75,204.75" Style="{DynamicResource CircularSurfaceToggleButtonStyle1}">
    		<Canvas>
    			<Label Canvas.Left="-15.25" Content="X" FontSize="36" Foreground="DarkRed" Canvas.Top="-38.5"/>
    		</Canvas>
    	</Custom:SurfaceToggleButton>
    	<Custom:SurfaceToggleButton x:Name="btnReset" Background="Transparent" Click="btnReset_Click" Width="60" Height="60" HorizontalAlignment="Center" Margin="126.666,379.25,202.834,204.75" Style="{DynamicResource CircularSurfaceToggleButtonStyle1}">
    		<Canvas>
    			<Label Canvas.Left="-17" Content="res" FontSize="25" Foreground="DarkRed" Canvas.Top="-29" HorizontalAlignment="Center" VerticalAlignment="Center"/>
    		</Canvas>
    	</Custom:SurfaceToggleButton>
		<Custom:SurfaceToggleButton x:Name="btnCluster" Background="Transparent" Width="60" Height="60" Click="btnCluster_Click" Margin="241.166,241.833,88.333,342.166" Style="{DynamicResource CircularSurfaceToggleButtonStyle1}">
                <Canvas>
                    <Ellipse
				        Height="20"
                        Width="20"                          
				        Stroke="Black"
				        StrokeThickness="2" Canvas.Top="-21.5" Canvas.Left="-13"/>
                    <Ellipse
                        Height="20"
                        Width="20"                          
				        Stroke="Black"                            
				        StrokeThickness="2" Canvas.Left="-24" Canvas.Top="0.5"/>
                    <Ellipse
                        Height="20"
                        Width="20"                          
				        Stroke="Black"                            
				        StrokeThickness="2" Canvas.Left="-1" Canvas.Top="-0.5"/>
                </Canvas>
            </Custom:SurfaceToggleButton>
            <Custom:SurfaceToggleButton x:Name="btnClusterLink" Background="Transparent" Width="60" Height="60" Click="btnClusterLink_Click" Margin="253.5,321,76,263" Style="{DynamicResource CircularSurfaceToggleButtonStyle1}">
                <Canvas>
                    <Ellipse
                        Height="15"
                        Width="15"                          
				        Stroke="Black"                            
				        StrokeThickness="2" Canvas.Top="-23.75" Canvas.Left="-26"/>
                    <Ellipse
                        Canvas.Top="4.25"
                        Height="15"
                        Width="15"                          
				        Stroke="Black"                            
				        StrokeThickness="2" Canvas.Left="2"/>
                    <Line 
                        X1="15" Y1="15" X2="32" Y2="32"
                        Stroke="Black"                            
				        StrokeThickness="2" Canvas.Top="-25.75" Canvas.Left="-28"
                        />
                </Canvas>
            </Custom:SurfaceToggleButton>
            <Path Data="M138.5,325.0735 L69.75,319" Fill="#FF8D8D8D" HorizontalAlignment="Left" Height="9.572" Margin="69.75,311.167,0,0" Stretch="Fill" Stroke="#FFB6B6B6" StrokeThickness="2" VerticalAlignment="Top" Width="71.583"/>
            <Path Data="M170.08333,277.33333 L127.41667,219" Fill="#FF8D8D8D" HorizontalAlignment="Left" Height="63.666" Margin="126.666,215.667,0,0" Stretch="Fill" Stroke="#FFB6B6B6" StrokeThickness="2" VerticalAlignment="Top" Width="41.084"/>
            <Path Data="M220.41667,279.333 L261.08333,218" Fill="#FF8D8D8D" HorizontalAlignment="Left" Height="63.666" Margin="216.75,215.667,0,0" Stretch="Fill" Stroke="#FFB6B6B6" StrokeThickness="2" VerticalAlignment="Top" Width="42.666"/>
            <Path Data="M248.5,315.66667 L319.75,317.66667" Fill="#FF8D8D8D" HorizontalAlignment="Left" Height="10.166" Margin="244.833,308.334,0,0" Stretch="Fill" Stroke="#FFB6B6B6" StrokeThickness="2" VerticalAlignment="Top" Width="73.583" RenderTransformOrigin="0.5,0.5">
            	<Path.RenderTransform>
            		<TransformGroup>
            			<ScaleTransform ScaleY="-1"/>
            			<SkewTransform/>
            			<RotateTransform/>
            			<TranslateTransform/>
            		</TransformGroup>
            	</Path.RenderTransform>
            </Path>     
            <Path Data="M156.75,365.74 L115.083,413.87" Fill="#FF8D8D8D" HorizontalAlignment="Left" Height="46.5" Margin="103.25,359.5,0,0" Stretch="Fill" Stroke="#FFB6B6B6" StrokeThickness="2" VerticalAlignment="Top" Width="49.542"/>
            <Path Data="M232.75,362 L285.41667,405" Fill="#FF8D8D8D" HorizontalAlignment="Left" Height="43.25" Margin="234.5,359.5,0,0" Stretch="Fill" Stroke="#FFB6B6B6" StrokeThickness="2" VerticalAlignment="Top" Width="56.167"/>
            <Path Data="M197.41667,381 L197.75,447" Fill="#FF8D8D8D" HorizontalAlignment="Left" Height="67.75" Margin="196.417,379.25,0,0" Stretch="Fill" Stroke="#FFB6B6B6" StrokeThickness="4" VerticalAlignment="Top" Width="2.333"/>
            <Ellipse x:Name="clusterOver" IsHitTestVisible="False" HorizontalAlignment="Left" Height="67.299" Margin="235.166,239.529,0,0" StrokeThickness="4" VerticalAlignment="Top" Width="66.666" Stroke="#FFC6FDEC" Fill="#3329D3F9"/>
            <Ellipse x:Name="arrowOver"  IsHitTestVisible="False" HorizontalAlignment="Left" Height="67.299" Margin="157.084,202,0,0" StrokeThickness="4" VerticalAlignment="Top" Width="66.666" Stroke="#FFC6FDEC" Fill="#3329D3F9"/>
            <Ellipse x:Name="lineOver" IsHitTestVisible="False" HorizontalAlignment="Left" Height="67.299" Margin="86.75,243.868,0,0" StrokeThickness="4" VerticalAlignment="Top" Width="66.666" Stroke="#FFC6FDEC" Fill="#3329D3F9"/>
            <Ellipse x:Name="textOver" IsHitTestVisible="False" HorizontalAlignment="Left" Height="67.299" Margin="75,318.167,0,0" StrokeThickness="4" VerticalAlignment="Top" Width="66.666" Stroke="#FFC6FDEC" Fill="#3329D3F9"/>
            <Ellipse x:Name="linkOver" IsHitTestVisible="False" HorizontalAlignment="Left" Height="67.299" Margin="246.334,315.201,0,0" StrokeThickness="4" VerticalAlignment="Top" Width="66.666" Stroke="#FFC6FDEC" Fill="#3329D3F9"/>
            <Ellipse x:Name="freeFormOver" IsHitTestVisible="False" HorizontalAlignment="Left" Height="67.299" Margin="160.084,293,0,0" StrokeThickness="4" VerticalAlignment="Top" Width="66.666" Stroke="#FFC6FDEC" Fill="#3329D3F9"/>
    </Grid>
</UserControl>
