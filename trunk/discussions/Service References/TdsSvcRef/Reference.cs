//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Discussions.TdsSvcRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SArgPoint", Namespace="http://schemas.datacontract.org/2004/07/TdsSvc.Model")]
    [System.SerializableAttribute()]
    public partial class SArgPoint : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumUnreadCommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PersonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecentlyEnteredMediaUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecentlyEnteredSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SharedToPublicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SideCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumUnreadComments {
            get {
                return this.NumUnreadCommentsField;
            }
            set {
                if ((this.NumUnreadCommentsField.Equals(value) != true)) {
                    this.NumUnreadCommentsField = value;
                    this.RaisePropertyChanged("NumUnreadComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNumber {
            get {
                return this.OrderNumberField;
            }
            set {
                if ((this.OrderNumberField.Equals(value) != true)) {
                    this.OrderNumberField = value;
                    this.RaisePropertyChanged("OrderNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PersonId {
            get {
                return this.PersonIdField;
            }
            set {
                if ((this.PersonIdField.Equals(value) != true)) {
                    this.PersonIdField = value;
                    this.RaisePropertyChanged("PersonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Point {
            get {
                return this.PointField;
            }
            set {
                if ((object.ReferenceEquals(this.PointField, value) != true)) {
                    this.PointField = value;
                    this.RaisePropertyChanged("Point");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecentlyEnteredMediaUrl {
            get {
                return this.RecentlyEnteredMediaUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.RecentlyEnteredMediaUrlField, value) != true)) {
                    this.RecentlyEnteredMediaUrlField = value;
                    this.RaisePropertyChanged("RecentlyEnteredMediaUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecentlyEnteredSource {
            get {
                return this.RecentlyEnteredSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.RecentlyEnteredSourceField, value) != true)) {
                    this.RecentlyEnteredSourceField = value;
                    this.RaisePropertyChanged("RecentlyEnteredSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SharedToPublic {
            get {
                return this.SharedToPublicField;
            }
            set {
                if ((this.SharedToPublicField.Equals(value) != true)) {
                    this.SharedToPublicField = value;
                    this.RaisePropertyChanged("SharedToPublic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SideCode {
            get {
                return this.SideCodeField;
            }
            set {
                if ((this.SideCodeField.Equals(value) != true)) {
                    this.SideCodeField = value;
                    this.RaisePropertyChanged("SideCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SComment", Namespace="http://schemas.datacontract.org/2004/07/TdsSvc.Model")]
    [System.SerializableAttribute()]
    public partial class SComment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ArgPointIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PersonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ArgPointId {
            get {
                return this.ArgPointIdField;
            }
            set {
                if ((this.ArgPointIdField.Equals(value) != true)) {
                    this.ArgPointIdField = value;
                    this.RaisePropertyChanged("ArgPointId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PersonId {
            get {
                return this.PersonIdField;
            }
            set {
                if ((this.PersonIdField.Equals(value) != true)) {
                    this.PersonIdField = value;
                    this.RaisePropertyChanged("PersonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SNewCommentsFrom", Namespace="http://schemas.datacontract.org/2004/07/TdsSvc.Model")]
    [System.SerializableAttribute()]
    public partial class SNewCommentsFrom : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumNewCommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PersonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumNewComments {
            get {
                return this.NumNewCommentsField;
            }
            set {
                if ((this.NumNewCommentsField.Equals(value) != true)) {
                    this.NumNewCommentsField = value;
                    this.RaisePropertyChanged("NumNewComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PersonId {
            get {
                return this.PersonIdField;
            }
            set {
                if ((this.PersonIdField.Equals(value) != true)) {
                    this.PersonIdField = value;
                    this.RaisePropertyChanged("PersonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PersonName {
            get {
                return this.PersonNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonNameField, value) != true)) {
                    this.PersonNameField = value;
                    this.RaisePropertyChanged("PersonName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SCommentReadInfo", Namespace="http://schemas.datacontract.org/2004/07/TdsSvc.Model")]
    [System.SerializableAttribute()]
    public partial class SCommentReadInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Discussions.TdsSvcRef.SComment CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EveryoneInTopicReadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Discussions.TdsSvcRef.SPerson[] PersonsWhoReadField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Discussions.TdsSvcRef.SComment Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EveryoneInTopicRead {
            get {
                return this.EveryoneInTopicReadField;
            }
            set {
                if ((this.EveryoneInTopicReadField.Equals(value) != true)) {
                    this.EveryoneInTopicReadField = value;
                    this.RaisePropertyChanged("EveryoneInTopicRead");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Discussions.TdsSvcRef.SPerson[] PersonsWhoRead {
            get {
                return this.PersonsWhoReadField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonsWhoReadField, value) != true)) {
                    this.PersonsWhoReadField = value;
                    this.RaisePropertyChanged("PersonsWhoRead");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SPerson", Namespace="http://schemas.datacontract.org/2004/07/TdsSvc.Model")]
    [System.SerializableAttribute()]
    public partial class SPerson : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AvatarAttachmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OnlineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OnlineDevTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SeatIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SessionIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AvatarAttachmentId {
            get {
                return this.AvatarAttachmentIdField;
            }
            set {
                if ((this.AvatarAttachmentIdField.Equals(value) != true)) {
                    this.AvatarAttachmentIdField = value;
                    this.RaisePropertyChanged("AvatarAttachmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Color {
            get {
                return this.ColorField;
            }
            set {
                if ((this.ColorField.Equals(value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Online {
            get {
                return this.OnlineField;
            }
            set {
                if ((this.OnlineField.Equals(value) != true)) {
                    this.OnlineField = value;
                    this.RaisePropertyChanged("Online");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OnlineDevType {
            get {
                return this.OnlineDevTypeField;
            }
            set {
                if ((this.OnlineDevTypeField.Equals(value) != true)) {
                    this.OnlineDevTypeField = value;
                    this.RaisePropertyChanged("OnlineDevType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SeatId {
            get {
                return this.SeatIdField;
            }
            set {
                if ((this.SeatIdField.Equals(value) != true)) {
                    this.SeatIdField = value;
                    this.RaisePropertyChanged("SeatId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SessionId {
            get {
                return this.SessionIdField;
            }
            set {
                if ((this.SessionIdField.Equals(value) != true)) {
                    this.SessionIdField = value;
                    this.RaisePropertyChanged("SessionId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SSource", Namespace="http://schemas.datacontract.org/2004/07/TdsSvc.Model")]
    [System.SerializableAttribute()]
    public partial class SSource : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNumber {
            get {
                return this.OrderNumberField;
            }
            set {
                if ((this.OrderNumberField.Equals(value) != true)) {
                    this.OrderNumberField = value;
                    this.RaisePropertyChanged("OrderNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SOrderInfo", Namespace="http://schemas.datacontract.org/2004/07/TdsSvc.Model")]
    [System.SerializableAttribute()]
    public partial class SOrderInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNumber {
            get {
                return this.OrderNumberField;
            }
            set {
                if ((this.OrderNumberField.Equals(value) != true)) {
                    this.OrderNumberField = value;
                    this.RaisePropertyChanged("OrderNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SInAttachment", Namespace="http://schemas.datacontract.org/2004/07/TdsSvc.Model")]
    [System.SerializableAttribute()]
    public partial class SInAttachment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] MediaDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ThumbField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VideoEmbedURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VideoLinkURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VideoThumbURLField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Format {
            get {
                return this.FormatField;
            }
            set {
                if ((this.FormatField.Equals(value) != true)) {
                    this.FormatField = value;
                    this.RaisePropertyChanged("Format");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Link {
            get {
                return this.LinkField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkField, value) != true)) {
                    this.LinkField = value;
                    this.RaisePropertyChanged("Link");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] MediaData {
            get {
                return this.MediaDataField;
            }
            set {
                if ((object.ReferenceEquals(this.MediaDataField, value) != true)) {
                    this.MediaDataField = value;
                    this.RaisePropertyChanged("MediaData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Thumb {
            get {
                return this.ThumbField;
            }
            set {
                if ((object.ReferenceEquals(this.ThumbField, value) != true)) {
                    this.ThumbField = value;
                    this.RaisePropertyChanged("Thumb");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VideoEmbedURL {
            get {
                return this.VideoEmbedURLField;
            }
            set {
                if ((object.ReferenceEquals(this.VideoEmbedURLField, value) != true)) {
                    this.VideoEmbedURLField = value;
                    this.RaisePropertyChanged("VideoEmbedURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VideoLinkURL {
            get {
                return this.VideoLinkURLField;
            }
            set {
                if ((object.ReferenceEquals(this.VideoLinkURLField, value) != true)) {
                    this.VideoLinkURLField = value;
                    this.RaisePropertyChanged("VideoLinkURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VideoThumbURL {
            get {
                return this.VideoThumbURLField;
            }
            set {
                if ((object.ReferenceEquals(this.VideoThumbURLField, value) != true)) {
                    this.VideoThumbURLField = value;
                    this.RaisePropertyChanged("VideoThumbURL");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SOutAttachment", Namespace="http://schemas.datacontract.org/2004/07/TdsSvc.Model")]
    [System.SerializableAttribute()]
    public partial class SOutAttachment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ArgPointIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DiscussionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] MediaDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MediaDataIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PersonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PersonWithAvatarIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ThumbField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VideoEmbedURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VideoLinkURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VideoThumbURLField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ArgPointId {
            get {
                return this.ArgPointIdField;
            }
            set {
                if ((this.ArgPointIdField.Equals(value) != true)) {
                    this.ArgPointIdField = value;
                    this.RaisePropertyChanged("ArgPointId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DiscussionId {
            get {
                return this.DiscussionIdField;
            }
            set {
                if ((this.DiscussionIdField.Equals(value) != true)) {
                    this.DiscussionIdField = value;
                    this.RaisePropertyChanged("DiscussionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Format {
            get {
                return this.FormatField;
            }
            set {
                if ((this.FormatField.Equals(value) != true)) {
                    this.FormatField = value;
                    this.RaisePropertyChanged("Format");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Link {
            get {
                return this.LinkField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkField, value) != true)) {
                    this.LinkField = value;
                    this.RaisePropertyChanged("Link");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] MediaData {
            get {
                return this.MediaDataField;
            }
            set {
                if ((object.ReferenceEquals(this.MediaDataField, value) != true)) {
                    this.MediaDataField = value;
                    this.RaisePropertyChanged("MediaData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MediaDataId {
            get {
                return this.MediaDataIdField;
            }
            set {
                if ((this.MediaDataIdField.Equals(value) != true)) {
                    this.MediaDataIdField = value;
                    this.RaisePropertyChanged("MediaDataId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNumber {
            get {
                return this.OrderNumberField;
            }
            set {
                if ((this.OrderNumberField.Equals(value) != true)) {
                    this.OrderNumberField = value;
                    this.RaisePropertyChanged("OrderNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PersonId {
            get {
                return this.PersonIdField;
            }
            set {
                if ((this.PersonIdField.Equals(value) != true)) {
                    this.PersonIdField = value;
                    this.RaisePropertyChanged("PersonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PersonWithAvatarId {
            get {
                return this.PersonWithAvatarIdField;
            }
            set {
                if ((this.PersonWithAvatarIdField.Equals(value) != true)) {
                    this.PersonWithAvatarIdField = value;
                    this.RaisePropertyChanged("PersonWithAvatarId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Thumb {
            get {
                return this.ThumbField;
            }
            set {
                if ((object.ReferenceEquals(this.ThumbField, value) != true)) {
                    this.ThumbField = value;
                    this.RaisePropertyChanged("Thumb");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VideoEmbedURL {
            get {
                return this.VideoEmbedURLField;
            }
            set {
                if ((object.ReferenceEquals(this.VideoEmbedURLField, value) != true)) {
                    this.VideoEmbedURLField = value;
                    this.RaisePropertyChanged("VideoEmbedURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VideoLinkURL {
            get {
                return this.VideoLinkURLField;
            }
            set {
                if ((object.ReferenceEquals(this.VideoLinkURLField, value) != true)) {
                    this.VideoLinkURLField = value;
                    this.RaisePropertyChanged("VideoLinkURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VideoThumbURL {
            get {
                return this.VideoThumbURLField;
            }
            set {
                if ((object.ReferenceEquals(this.VideoThumbURLField, value) != true)) {
                    this.VideoThumbURLField = value;
                    this.RaisePropertyChanged("VideoThumbURL");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TdsSvcRef.ITdsService")]
    public interface ITdsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITdsService/GetArgPoint", ReplyAction="http://tempuri.org/ITdsService/GetArgPointResponse")]
        Discussions.TdsSvcRef.SArgPoint GetArgPoint(int pointId, int callerId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITdsService/GetArgPoint", ReplyAction="http://tempuri.org/ITdsService/GetArgPointResponse")]
        System.IAsyncResult BeginGetArgPoint(int pointId, int callerId, System.AsyncCallback callback, object asyncState);
        
        Discussions.TdsSvcRef.SArgPoint EndGetArgPoint(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITdsService/GetArgPointsInTopic", ReplyAction="http://tempuri.org/ITdsService/GetArgPointsInTopicResponse")]
        Discussions.TdsSvcRef.SArgPoint[] GetArgPointsInTopic(int topicId, int callerId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITdsService/GetArgPointsInTopic", ReplyAction="http://tempuri.org/ITdsService/GetArgPointsInTopicResponse")]
        System.IAsyncResult BeginGetArgPointsInTopic(int topicId, int callerId, System.AsyncCallback callback, object asyncState);
        
        Discussions.TdsSvcRef.SArgPoint[] EndGetArgPointsInTopic(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITdsService/AddComment", ReplyAction="http://tempuri.org/ITdsService/AddCommentResponse")]
        void AddComment(Discussions.TdsSvcRef.SComment comment);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITdsService/AddComment", ReplyAction="http://tempuri.org/ITdsService/AddCommentResponse")]
        System.IAsyncResult BeginAddComment(Discussions.TdsSvcRef.SComment comment, System.AsyncCallback callback, object asyncState);
        
        void EndAddComment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITdsService/ChangeCommentText", ReplyAction="http://tempuri.org/ITdsService/ChangeCommentTextResponse")]
        void ChangeCommentText(int commentId, string newText);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITdsService/ChangeCommentText", ReplyAction="http://tempuri.org/ITdsService/ChangeCommentTextResponse")]
        System.IAsyncResult BeginChangeCommentText(int commentId, string newText, System.AsyncCallback callback, object asyncState);
        
        void EndChangeCommentText(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITdsService/RemoveComment", ReplyAction="http://tempuri.org/ITdsService/RemoveCommentResponse")]
        void RemoveComment(int commentId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITdsService/RemoveComment", ReplyAction="http://tempuri.org/ITdsService/RemoveCommentResponse")]
        System.IAsyncResult BeginRemoveComment(int commentId, System.AsyncCallback callback, object asyncState);
        
        void EndRemoveComment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITdsService/NumCommentsUnreadBy", ReplyAction="http://tempuri.org/ITdsService/NumCommentsUnreadByResponse")]
        Discussions.TdsSvcRef.SNewCommentsFrom[] NumCommentsUnreadBy(int pointId, int callerId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITdsService/NumCommentsUnreadBy", ReplyAction="http://tempuri.org/ITdsService/NumCommentsUnreadByResponse")]
        System.IAsyncResult BeginNumCommentsUnreadBy(int pointId, int callerId, System.AsyncCallback callback, object asyncState);
        
        Discussions.TdsSvcRef.SNewCommentsFrom[] EndNumCommentsUnreadBy(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITdsService/SubsetOfPersonsWithDots", ReplyAction="http://tempuri.org/ITdsService/SubsetOfPersonsWithDotsResponse")]
        int[] SubsetOfPersonsWithDots(int[] personIds, int topicId, int callerId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITdsService/SubsetOfPersonsWithDots", ReplyAction="http://tempuri.org/ITdsService/SubsetOfPersonsWithDotsResponse")]
        System.IAsyncResult BeginSubsetOfPersonsWithDots(int[] personIds, int topicId, int callerId, System.AsyncCallback callback, object asyncState);
        
        int[] EndSubsetOfPersonsWithDots(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITdsService/GetCommentsInArgPoint", ReplyAction="http://tempuri.org/ITdsService/GetCommentsInArgPointResponse")]
        Discussions.TdsSvcRef.SComment[] GetCommentsInArgPoint(int pointId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITdsService/GetCommentsInArgPoint", ReplyAction="http://tempuri.org/ITdsService/GetCommentsInArgPointResponse")]
        System.IAsyncResult BeginGetCommentsInArgPoint(int pointId, System.AsyncCallback callback, object asyncState);
        
        Discussions.TdsSvcRef.SComment[] EndGetCommentsInArgPoint(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITdsService/GetCommentReadInfo", ReplyAction="http://tempuri.org/ITdsService/GetCommentReadInfoResponse")]
        Discussions.TdsSvcRef.SCommentReadInfo GetCommentReadInfo(int commentId, int callerId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITdsService/GetCommentReadInfo", ReplyAction="http://tempuri.org/ITdsService/GetCommentReadInfoResponse")]
        System.IAsyncResult BeginGetCommentReadInfo(int commentId, int callerId, System.AsyncCallback callback, object asyncState);
        
        Discussions.TdsSvcRef.SCommentReadInfo EndGetCommentReadInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITdsService/GetSourcesInArgPoint", ReplyAction="http://tempuri.org/ITdsService/GetSourcesInArgPointResponse")]
        Discussions.TdsSvcRef.SSource[] GetSourcesInArgPoint(int pointId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITdsService/GetSourcesInArgPoint", ReplyAction="http://tempuri.org/ITdsService/GetSourcesInArgPointResponse")]
        System.IAsyncResult BeginGetSourcesInArgPoint(int pointId, System.AsyncCallback callback, object asyncState);
        
        Discussions.TdsSvcRef.SSource[] EndGetSourcesInArgPoint(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITdsService/AddSourceArgPoint", ReplyAction="http://tempuri.org/ITdsService/AddSourceArgPointResponse")]
        void AddSourceArgPoint(int pointId, string text, int callerId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITdsService/AddSourceArgPoint", ReplyAction="http://tempuri.org/ITdsService/AddSourceArgPointResponse")]
        System.IAsyncResult BeginAddSourceArgPoint(int pointId, string text, int callerId, System.AsyncCallback callback, object asyncState);
        
        void EndAddSourceArgPoint(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITdsService/MoveSourceUp", ReplyAction="http://tempuri.org/ITdsService/MoveSourceUpResponse")]
        bool MoveSourceUp(int sourceId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITdsService/MoveSourceUp", ReplyAction="http://tempuri.org/ITdsService/MoveSourceUpResponse")]
        System.IAsyncResult BeginMoveSourceUp(int sourceId, System.AsyncCallback callback, object asyncState);
        
        bool EndMoveSourceUp(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITdsService/MoveSourceDown", ReplyAction="http://tempuri.org/ITdsService/MoveSourceDownResponse")]
        bool MoveSourceDown(int sourceId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITdsService/MoveSourceDown", ReplyAction="http://tempuri.org/ITdsService/MoveSourceDownResponse")]
        System.IAsyncResult BeginMoveSourceDown(int sourceId, System.AsyncCallback callback, object asyncState);
        
        bool EndMoveSourceDown(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITdsService/GetSourcesOrder", ReplyAction="http://tempuri.org/ITdsService/GetSourcesOrderResponse")]
        Discussions.TdsSvcRef.SOrderInfo[] GetSourcesOrder(int pointId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITdsService/GetSourcesOrder", ReplyAction="http://tempuri.org/ITdsService/GetSourcesOrderResponse")]
        System.IAsyncResult BeginGetSourcesOrder(int pointId, System.AsyncCallback callback, object asyncState);
        
        Discussions.TdsSvcRef.SOrderInfo[] EndGetSourcesOrder(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITdsService/AddAttachmentToPoint", ReplyAction="http://tempuri.org/ITdsService/AddAttachmentToPointResponse")]
        void AddAttachmentToPoint(int pointId, Discussions.TdsSvcRef.SInAttachment attachment, int callerId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITdsService/AddAttachmentToPoint", ReplyAction="http://tempuri.org/ITdsService/AddAttachmentToPointResponse")]
        System.IAsyncResult BeginAddAttachmentToPoint(int pointId, Discussions.TdsSvcRef.SInAttachment attachment, int callerId, System.AsyncCallback callback, object asyncState);
        
        void EndAddAttachmentToPoint(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITdsService/AddAttachmentToDiscussion", ReplyAction="http://tempuri.org/ITdsService/AddAttachmentToDiscussionResponse")]
        void AddAttachmentToDiscussion(int discussionId, Discussions.TdsSvcRef.SInAttachment attachment, int callerId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITdsService/AddAttachmentToDiscussion", ReplyAction="http://tempuri.org/ITdsService/AddAttachmentToDiscussionResponse")]
        System.IAsyncResult BeginAddAttachmentToDiscussion(int discussionId, Discussions.TdsSvcRef.SInAttachment attachment, int callerId, System.AsyncCallback callback, object asyncState);
        
        void EndAddAttachmentToDiscussion(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITdsService/AddAttachmentToOwnAvatar", ReplyAction="http://tempuri.org/ITdsService/AddAttachmentToOwnAvatarResponse")]
        void AddAttachmentToOwnAvatar(Discussions.TdsSvcRef.SInAttachment attachment, int callerId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITdsService/AddAttachmentToOwnAvatar", ReplyAction="http://tempuri.org/ITdsService/AddAttachmentToOwnAvatarResponse")]
        System.IAsyncResult BeginAddAttachmentToOwnAvatar(Discussions.TdsSvcRef.SInAttachment attachment, int callerId, System.AsyncCallback callback, object asyncState);
        
        void EndAddAttachmentToOwnAvatar(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITdsService/RemoveAttachment", ReplyAction="http://tempuri.org/ITdsService/RemoveAttachmentResponse")]
        void RemoveAttachment(int attachmentId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITdsService/RemoveAttachment", ReplyAction="http://tempuri.org/ITdsService/RemoveAttachmentResponse")]
        System.IAsyncResult BeginRemoveAttachment(int attachmentId, System.AsyncCallback callback, object asyncState);
        
        void EndRemoveAttachment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITdsService/MoveAttachmentUp", ReplyAction="http://tempuri.org/ITdsService/MoveAttachmentUpResponse")]
        bool MoveAttachmentUp(int attachmentId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITdsService/MoveAttachmentUp", ReplyAction="http://tempuri.org/ITdsService/MoveAttachmentUpResponse")]
        System.IAsyncResult BeginMoveAttachmentUp(int attachmentId, System.AsyncCallback callback, object asyncState);
        
        bool EndMoveAttachmentUp(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITdsService/MoveAttachmentDown", ReplyAction="http://tempuri.org/ITdsService/MoveAttachmentDownResponse")]
        bool MoveAttachmentDown(int attachmentId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITdsService/MoveAttachmentDown", ReplyAction="http://tempuri.org/ITdsService/MoveAttachmentDownResponse")]
        System.IAsyncResult BeginMoveAttachmentDown(int attachmentId, System.AsyncCallback callback, object asyncState);
        
        bool EndMoveAttachmentDown(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITdsService/GetAttachmentsOrder", ReplyAction="http://tempuri.org/ITdsService/GetAttachmentsOrderResponse")]
        Discussions.TdsSvcRef.SOrderInfo[] GetAttachmentsOrder(int pointId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITdsService/GetAttachmentsOrder", ReplyAction="http://tempuri.org/ITdsService/GetAttachmentsOrderResponse")]
        System.IAsyncResult BeginGetAttachmentsOrder(int pointId, System.AsyncCallback callback, object asyncState);
        
        Discussions.TdsSvcRef.SOrderInfo[] EndGetAttachmentsOrder(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITdsService/GetAttachmentsInArgPoint", ReplyAction="http://tempuri.org/ITdsService/GetAttachmentsInArgPointResponse")]
        Discussions.TdsSvcRef.SOutAttachment[] GetAttachmentsInArgPoint(int pointId, bool includeMediaData);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITdsService/GetAttachmentsInArgPoint", ReplyAction="http://tempuri.org/ITdsService/GetAttachmentsInArgPointResponse")]
        System.IAsyncResult BeginGetAttachmentsInArgPoint(int pointId, bool includeMediaData, System.AsyncCallback callback, object asyncState);
        
        Discussions.TdsSvcRef.SOutAttachment[] EndGetAttachmentsInArgPoint(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITdsServiceChannel : Discussions.TdsSvcRef.ITdsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetArgPointCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetArgPointCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Discussions.TdsSvcRef.SArgPoint Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Discussions.TdsSvcRef.SArgPoint)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetArgPointsInTopicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetArgPointsInTopicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Discussions.TdsSvcRef.SArgPoint[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Discussions.TdsSvcRef.SArgPoint[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NumCommentsUnreadByCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public NumCommentsUnreadByCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Discussions.TdsSvcRef.SNewCommentsFrom[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Discussions.TdsSvcRef.SNewCommentsFrom[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SubsetOfPersonsWithDotsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SubsetOfPersonsWithDotsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCommentsInArgPointCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCommentsInArgPointCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Discussions.TdsSvcRef.SComment[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Discussions.TdsSvcRef.SComment[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCommentReadInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCommentReadInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Discussions.TdsSvcRef.SCommentReadInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Discussions.TdsSvcRef.SCommentReadInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSourcesInArgPointCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSourcesInArgPointCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Discussions.TdsSvcRef.SSource[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Discussions.TdsSvcRef.SSource[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MoveSourceUpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MoveSourceUpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MoveSourceDownCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MoveSourceDownCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSourcesOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSourcesOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Discussions.TdsSvcRef.SOrderInfo[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Discussions.TdsSvcRef.SOrderInfo[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MoveAttachmentUpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MoveAttachmentUpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MoveAttachmentDownCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MoveAttachmentDownCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAttachmentsOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAttachmentsOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Discussions.TdsSvcRef.SOrderInfo[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Discussions.TdsSvcRef.SOrderInfo[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAttachmentsInArgPointCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAttachmentsInArgPointCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Discussions.TdsSvcRef.SOutAttachment[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Discussions.TdsSvcRef.SOutAttachment[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TdsServiceClient : System.ServiceModel.ClientBase<Discussions.TdsSvcRef.ITdsService>, Discussions.TdsSvcRef.ITdsService {
        
        private BeginOperationDelegate onBeginGetArgPointDelegate;
        
        private EndOperationDelegate onEndGetArgPointDelegate;
        
        private System.Threading.SendOrPostCallback onGetArgPointCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetArgPointsInTopicDelegate;
        
        private EndOperationDelegate onEndGetArgPointsInTopicDelegate;
        
        private System.Threading.SendOrPostCallback onGetArgPointsInTopicCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddCommentDelegate;
        
        private EndOperationDelegate onEndAddCommentDelegate;
        
        private System.Threading.SendOrPostCallback onAddCommentCompletedDelegate;
        
        private BeginOperationDelegate onBeginChangeCommentTextDelegate;
        
        private EndOperationDelegate onEndChangeCommentTextDelegate;
        
        private System.Threading.SendOrPostCallback onChangeCommentTextCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveCommentDelegate;
        
        private EndOperationDelegate onEndRemoveCommentDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveCommentCompletedDelegate;
        
        private BeginOperationDelegate onBeginNumCommentsUnreadByDelegate;
        
        private EndOperationDelegate onEndNumCommentsUnreadByDelegate;
        
        private System.Threading.SendOrPostCallback onNumCommentsUnreadByCompletedDelegate;
        
        private BeginOperationDelegate onBeginSubsetOfPersonsWithDotsDelegate;
        
        private EndOperationDelegate onEndSubsetOfPersonsWithDotsDelegate;
        
        private System.Threading.SendOrPostCallback onSubsetOfPersonsWithDotsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCommentsInArgPointDelegate;
        
        private EndOperationDelegate onEndGetCommentsInArgPointDelegate;
        
        private System.Threading.SendOrPostCallback onGetCommentsInArgPointCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCommentReadInfoDelegate;
        
        private EndOperationDelegate onEndGetCommentReadInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetCommentReadInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSourcesInArgPointDelegate;
        
        private EndOperationDelegate onEndGetSourcesInArgPointDelegate;
        
        private System.Threading.SendOrPostCallback onGetSourcesInArgPointCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddSourceArgPointDelegate;
        
        private EndOperationDelegate onEndAddSourceArgPointDelegate;
        
        private System.Threading.SendOrPostCallback onAddSourceArgPointCompletedDelegate;
        
        private BeginOperationDelegate onBeginMoveSourceUpDelegate;
        
        private EndOperationDelegate onEndMoveSourceUpDelegate;
        
        private System.Threading.SendOrPostCallback onMoveSourceUpCompletedDelegate;
        
        private BeginOperationDelegate onBeginMoveSourceDownDelegate;
        
        private EndOperationDelegate onEndMoveSourceDownDelegate;
        
        private System.Threading.SendOrPostCallback onMoveSourceDownCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSourcesOrderDelegate;
        
        private EndOperationDelegate onEndGetSourcesOrderDelegate;
        
        private System.Threading.SendOrPostCallback onGetSourcesOrderCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddAttachmentToPointDelegate;
        
        private EndOperationDelegate onEndAddAttachmentToPointDelegate;
        
        private System.Threading.SendOrPostCallback onAddAttachmentToPointCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddAttachmentToDiscussionDelegate;
        
        private EndOperationDelegate onEndAddAttachmentToDiscussionDelegate;
        
        private System.Threading.SendOrPostCallback onAddAttachmentToDiscussionCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddAttachmentToOwnAvatarDelegate;
        
        private EndOperationDelegate onEndAddAttachmentToOwnAvatarDelegate;
        
        private System.Threading.SendOrPostCallback onAddAttachmentToOwnAvatarCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveAttachmentDelegate;
        
        private EndOperationDelegate onEndRemoveAttachmentDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveAttachmentCompletedDelegate;
        
        private BeginOperationDelegate onBeginMoveAttachmentUpDelegate;
        
        private EndOperationDelegate onEndMoveAttachmentUpDelegate;
        
        private System.Threading.SendOrPostCallback onMoveAttachmentUpCompletedDelegate;
        
        private BeginOperationDelegate onBeginMoveAttachmentDownDelegate;
        
        private EndOperationDelegate onEndMoveAttachmentDownDelegate;
        
        private System.Threading.SendOrPostCallback onMoveAttachmentDownCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAttachmentsOrderDelegate;
        
        private EndOperationDelegate onEndGetAttachmentsOrderDelegate;
        
        private System.Threading.SendOrPostCallback onGetAttachmentsOrderCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAttachmentsInArgPointDelegate;
        
        private EndOperationDelegate onEndGetAttachmentsInArgPointDelegate;
        
        private System.Threading.SendOrPostCallback onGetAttachmentsInArgPointCompletedDelegate;
        
        public TdsServiceClient() {
        }
        
        public TdsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TdsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TdsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TdsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetArgPointCompletedEventArgs> GetArgPointCompleted;
        
        public event System.EventHandler<GetArgPointsInTopicCompletedEventArgs> GetArgPointsInTopicCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddCommentCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ChangeCommentTextCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RemoveCommentCompleted;
        
        public event System.EventHandler<NumCommentsUnreadByCompletedEventArgs> NumCommentsUnreadByCompleted;
        
        public event System.EventHandler<SubsetOfPersonsWithDotsCompletedEventArgs> SubsetOfPersonsWithDotsCompleted;
        
        public event System.EventHandler<GetCommentsInArgPointCompletedEventArgs> GetCommentsInArgPointCompleted;
        
        public event System.EventHandler<GetCommentReadInfoCompletedEventArgs> GetCommentReadInfoCompleted;
        
        public event System.EventHandler<GetSourcesInArgPointCompletedEventArgs> GetSourcesInArgPointCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddSourceArgPointCompleted;
        
        public event System.EventHandler<MoveSourceUpCompletedEventArgs> MoveSourceUpCompleted;
        
        public event System.EventHandler<MoveSourceDownCompletedEventArgs> MoveSourceDownCompleted;
        
        public event System.EventHandler<GetSourcesOrderCompletedEventArgs> GetSourcesOrderCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddAttachmentToPointCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddAttachmentToDiscussionCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddAttachmentToOwnAvatarCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RemoveAttachmentCompleted;
        
        public event System.EventHandler<MoveAttachmentUpCompletedEventArgs> MoveAttachmentUpCompleted;
        
        public event System.EventHandler<MoveAttachmentDownCompletedEventArgs> MoveAttachmentDownCompleted;
        
        public event System.EventHandler<GetAttachmentsOrderCompletedEventArgs> GetAttachmentsOrderCompleted;
        
        public event System.EventHandler<GetAttachmentsInArgPointCompletedEventArgs> GetAttachmentsInArgPointCompleted;
        
        public Discussions.TdsSvcRef.SArgPoint GetArgPoint(int pointId, int callerId) {
            return base.Channel.GetArgPoint(pointId, callerId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetArgPoint(int pointId, int callerId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetArgPoint(pointId, callerId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Discussions.TdsSvcRef.SArgPoint EndGetArgPoint(System.IAsyncResult result) {
            return base.Channel.EndGetArgPoint(result);
        }
        
        private System.IAsyncResult OnBeginGetArgPoint(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int pointId = ((int)(inValues[0]));
            int callerId = ((int)(inValues[1]));
            return this.BeginGetArgPoint(pointId, callerId, callback, asyncState);
        }
        
        private object[] OnEndGetArgPoint(System.IAsyncResult result) {
            Discussions.TdsSvcRef.SArgPoint retVal = this.EndGetArgPoint(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetArgPointCompleted(object state) {
            if ((this.GetArgPointCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetArgPointCompleted(this, new GetArgPointCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetArgPointAsync(int pointId, int callerId) {
            this.GetArgPointAsync(pointId, callerId, null);
        }
        
        public void GetArgPointAsync(int pointId, int callerId, object userState) {
            if ((this.onBeginGetArgPointDelegate == null)) {
                this.onBeginGetArgPointDelegate = new BeginOperationDelegate(this.OnBeginGetArgPoint);
            }
            if ((this.onEndGetArgPointDelegate == null)) {
                this.onEndGetArgPointDelegate = new EndOperationDelegate(this.OnEndGetArgPoint);
            }
            if ((this.onGetArgPointCompletedDelegate == null)) {
                this.onGetArgPointCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetArgPointCompleted);
            }
            base.InvokeAsync(this.onBeginGetArgPointDelegate, new object[] {
                        pointId,
                        callerId}, this.onEndGetArgPointDelegate, this.onGetArgPointCompletedDelegate, userState);
        }
        
        public Discussions.TdsSvcRef.SArgPoint[] GetArgPointsInTopic(int topicId, int callerId) {
            return base.Channel.GetArgPointsInTopic(topicId, callerId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetArgPointsInTopic(int topicId, int callerId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetArgPointsInTopic(topicId, callerId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Discussions.TdsSvcRef.SArgPoint[] EndGetArgPointsInTopic(System.IAsyncResult result) {
            return base.Channel.EndGetArgPointsInTopic(result);
        }
        
        private System.IAsyncResult OnBeginGetArgPointsInTopic(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int topicId = ((int)(inValues[0]));
            int callerId = ((int)(inValues[1]));
            return this.BeginGetArgPointsInTopic(topicId, callerId, callback, asyncState);
        }
        
        private object[] OnEndGetArgPointsInTopic(System.IAsyncResult result) {
            Discussions.TdsSvcRef.SArgPoint[] retVal = this.EndGetArgPointsInTopic(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetArgPointsInTopicCompleted(object state) {
            if ((this.GetArgPointsInTopicCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetArgPointsInTopicCompleted(this, new GetArgPointsInTopicCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetArgPointsInTopicAsync(int topicId, int callerId) {
            this.GetArgPointsInTopicAsync(topicId, callerId, null);
        }
        
        public void GetArgPointsInTopicAsync(int topicId, int callerId, object userState) {
            if ((this.onBeginGetArgPointsInTopicDelegate == null)) {
                this.onBeginGetArgPointsInTopicDelegate = new BeginOperationDelegate(this.OnBeginGetArgPointsInTopic);
            }
            if ((this.onEndGetArgPointsInTopicDelegate == null)) {
                this.onEndGetArgPointsInTopicDelegate = new EndOperationDelegate(this.OnEndGetArgPointsInTopic);
            }
            if ((this.onGetArgPointsInTopicCompletedDelegate == null)) {
                this.onGetArgPointsInTopicCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetArgPointsInTopicCompleted);
            }
            base.InvokeAsync(this.onBeginGetArgPointsInTopicDelegate, new object[] {
                        topicId,
                        callerId}, this.onEndGetArgPointsInTopicDelegate, this.onGetArgPointsInTopicCompletedDelegate, userState);
        }
        
        public void AddComment(Discussions.TdsSvcRef.SComment comment) {
            base.Channel.AddComment(comment);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddComment(Discussions.TdsSvcRef.SComment comment, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddComment(comment, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddComment(System.IAsyncResult result) {
            base.Channel.EndAddComment(result);
        }
        
        private System.IAsyncResult OnBeginAddComment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Discussions.TdsSvcRef.SComment comment = ((Discussions.TdsSvcRef.SComment)(inValues[0]));
            return this.BeginAddComment(comment, callback, asyncState);
        }
        
        private object[] OnEndAddComment(System.IAsyncResult result) {
            this.EndAddComment(result);
            return null;
        }
        
        private void OnAddCommentCompleted(object state) {
            if ((this.AddCommentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddCommentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddCommentAsync(Discussions.TdsSvcRef.SComment comment) {
            this.AddCommentAsync(comment, null);
        }
        
        public void AddCommentAsync(Discussions.TdsSvcRef.SComment comment, object userState) {
            if ((this.onBeginAddCommentDelegate == null)) {
                this.onBeginAddCommentDelegate = new BeginOperationDelegate(this.OnBeginAddComment);
            }
            if ((this.onEndAddCommentDelegate == null)) {
                this.onEndAddCommentDelegate = new EndOperationDelegate(this.OnEndAddComment);
            }
            if ((this.onAddCommentCompletedDelegate == null)) {
                this.onAddCommentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddCommentCompleted);
            }
            base.InvokeAsync(this.onBeginAddCommentDelegate, new object[] {
                        comment}, this.onEndAddCommentDelegate, this.onAddCommentCompletedDelegate, userState);
        }
        
        public void ChangeCommentText(int commentId, string newText) {
            base.Channel.ChangeCommentText(commentId, newText);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginChangeCommentText(int commentId, string newText, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginChangeCommentText(commentId, newText, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndChangeCommentText(System.IAsyncResult result) {
            base.Channel.EndChangeCommentText(result);
        }
        
        private System.IAsyncResult OnBeginChangeCommentText(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int commentId = ((int)(inValues[0]));
            string newText = ((string)(inValues[1]));
            return this.BeginChangeCommentText(commentId, newText, callback, asyncState);
        }
        
        private object[] OnEndChangeCommentText(System.IAsyncResult result) {
            this.EndChangeCommentText(result);
            return null;
        }
        
        private void OnChangeCommentTextCompleted(object state) {
            if ((this.ChangeCommentTextCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ChangeCommentTextCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ChangeCommentTextAsync(int commentId, string newText) {
            this.ChangeCommentTextAsync(commentId, newText, null);
        }
        
        public void ChangeCommentTextAsync(int commentId, string newText, object userState) {
            if ((this.onBeginChangeCommentTextDelegate == null)) {
                this.onBeginChangeCommentTextDelegate = new BeginOperationDelegate(this.OnBeginChangeCommentText);
            }
            if ((this.onEndChangeCommentTextDelegate == null)) {
                this.onEndChangeCommentTextDelegate = new EndOperationDelegate(this.OnEndChangeCommentText);
            }
            if ((this.onChangeCommentTextCompletedDelegate == null)) {
                this.onChangeCommentTextCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnChangeCommentTextCompleted);
            }
            base.InvokeAsync(this.onBeginChangeCommentTextDelegate, new object[] {
                        commentId,
                        newText}, this.onEndChangeCommentTextDelegate, this.onChangeCommentTextCompletedDelegate, userState);
        }
        
        public void RemoveComment(int commentId) {
            base.Channel.RemoveComment(commentId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRemoveComment(int commentId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveComment(commentId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndRemoveComment(System.IAsyncResult result) {
            base.Channel.EndRemoveComment(result);
        }
        
        private System.IAsyncResult OnBeginRemoveComment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int commentId = ((int)(inValues[0]));
            return this.BeginRemoveComment(commentId, callback, asyncState);
        }
        
        private object[] OnEndRemoveComment(System.IAsyncResult result) {
            this.EndRemoveComment(result);
            return null;
        }
        
        private void OnRemoveCommentCompleted(object state) {
            if ((this.RemoveCommentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveCommentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveCommentAsync(int commentId) {
            this.RemoveCommentAsync(commentId, null);
        }
        
        public void RemoveCommentAsync(int commentId, object userState) {
            if ((this.onBeginRemoveCommentDelegate == null)) {
                this.onBeginRemoveCommentDelegate = new BeginOperationDelegate(this.OnBeginRemoveComment);
            }
            if ((this.onEndRemoveCommentDelegate == null)) {
                this.onEndRemoveCommentDelegate = new EndOperationDelegate(this.OnEndRemoveComment);
            }
            if ((this.onRemoveCommentCompletedDelegate == null)) {
                this.onRemoveCommentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveCommentCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveCommentDelegate, new object[] {
                        commentId}, this.onEndRemoveCommentDelegate, this.onRemoveCommentCompletedDelegate, userState);
        }
        
        public Discussions.TdsSvcRef.SNewCommentsFrom[] NumCommentsUnreadBy(int pointId, int callerId) {
            return base.Channel.NumCommentsUnreadBy(pointId, callerId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginNumCommentsUnreadBy(int pointId, int callerId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNumCommentsUnreadBy(pointId, callerId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Discussions.TdsSvcRef.SNewCommentsFrom[] EndNumCommentsUnreadBy(System.IAsyncResult result) {
            return base.Channel.EndNumCommentsUnreadBy(result);
        }
        
        private System.IAsyncResult OnBeginNumCommentsUnreadBy(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int pointId = ((int)(inValues[0]));
            int callerId = ((int)(inValues[1]));
            return this.BeginNumCommentsUnreadBy(pointId, callerId, callback, asyncState);
        }
        
        private object[] OnEndNumCommentsUnreadBy(System.IAsyncResult result) {
            Discussions.TdsSvcRef.SNewCommentsFrom[] retVal = this.EndNumCommentsUnreadBy(result);
            return new object[] {
                    retVal};
        }
        
        private void OnNumCommentsUnreadByCompleted(object state) {
            if ((this.NumCommentsUnreadByCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.NumCommentsUnreadByCompleted(this, new NumCommentsUnreadByCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void NumCommentsUnreadByAsync(int pointId, int callerId) {
            this.NumCommentsUnreadByAsync(pointId, callerId, null);
        }
        
        public void NumCommentsUnreadByAsync(int pointId, int callerId, object userState) {
            if ((this.onBeginNumCommentsUnreadByDelegate == null)) {
                this.onBeginNumCommentsUnreadByDelegate = new BeginOperationDelegate(this.OnBeginNumCommentsUnreadBy);
            }
            if ((this.onEndNumCommentsUnreadByDelegate == null)) {
                this.onEndNumCommentsUnreadByDelegate = new EndOperationDelegate(this.OnEndNumCommentsUnreadBy);
            }
            if ((this.onNumCommentsUnreadByCompletedDelegate == null)) {
                this.onNumCommentsUnreadByCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNumCommentsUnreadByCompleted);
            }
            base.InvokeAsync(this.onBeginNumCommentsUnreadByDelegate, new object[] {
                        pointId,
                        callerId}, this.onEndNumCommentsUnreadByDelegate, this.onNumCommentsUnreadByCompletedDelegate, userState);
        }
        
        public int[] SubsetOfPersonsWithDots(int[] personIds, int topicId, int callerId) {
            return base.Channel.SubsetOfPersonsWithDots(personIds, topicId, callerId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSubsetOfPersonsWithDots(int[] personIds, int topicId, int callerId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSubsetOfPersonsWithDots(personIds, topicId, callerId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int[] EndSubsetOfPersonsWithDots(System.IAsyncResult result) {
            return base.Channel.EndSubsetOfPersonsWithDots(result);
        }
        
        private System.IAsyncResult OnBeginSubsetOfPersonsWithDots(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int[] personIds = ((int[])(inValues[0]));
            int topicId = ((int)(inValues[1]));
            int callerId = ((int)(inValues[2]));
            return this.BeginSubsetOfPersonsWithDots(personIds, topicId, callerId, callback, asyncState);
        }
        
        private object[] OnEndSubsetOfPersonsWithDots(System.IAsyncResult result) {
            int[] retVal = this.EndSubsetOfPersonsWithDots(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSubsetOfPersonsWithDotsCompleted(object state) {
            if ((this.SubsetOfPersonsWithDotsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SubsetOfPersonsWithDotsCompleted(this, new SubsetOfPersonsWithDotsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SubsetOfPersonsWithDotsAsync(int[] personIds, int topicId, int callerId) {
            this.SubsetOfPersonsWithDotsAsync(personIds, topicId, callerId, null);
        }
        
        public void SubsetOfPersonsWithDotsAsync(int[] personIds, int topicId, int callerId, object userState) {
            if ((this.onBeginSubsetOfPersonsWithDotsDelegate == null)) {
                this.onBeginSubsetOfPersonsWithDotsDelegate = new BeginOperationDelegate(this.OnBeginSubsetOfPersonsWithDots);
            }
            if ((this.onEndSubsetOfPersonsWithDotsDelegate == null)) {
                this.onEndSubsetOfPersonsWithDotsDelegate = new EndOperationDelegate(this.OnEndSubsetOfPersonsWithDots);
            }
            if ((this.onSubsetOfPersonsWithDotsCompletedDelegate == null)) {
                this.onSubsetOfPersonsWithDotsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSubsetOfPersonsWithDotsCompleted);
            }
            base.InvokeAsync(this.onBeginSubsetOfPersonsWithDotsDelegate, new object[] {
                        personIds,
                        topicId,
                        callerId}, this.onEndSubsetOfPersonsWithDotsDelegate, this.onSubsetOfPersonsWithDotsCompletedDelegate, userState);
        }
        
        public Discussions.TdsSvcRef.SComment[] GetCommentsInArgPoint(int pointId) {
            return base.Channel.GetCommentsInArgPoint(pointId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCommentsInArgPoint(int pointId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCommentsInArgPoint(pointId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Discussions.TdsSvcRef.SComment[] EndGetCommentsInArgPoint(System.IAsyncResult result) {
            return base.Channel.EndGetCommentsInArgPoint(result);
        }
        
        private System.IAsyncResult OnBeginGetCommentsInArgPoint(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int pointId = ((int)(inValues[0]));
            return this.BeginGetCommentsInArgPoint(pointId, callback, asyncState);
        }
        
        private object[] OnEndGetCommentsInArgPoint(System.IAsyncResult result) {
            Discussions.TdsSvcRef.SComment[] retVal = this.EndGetCommentsInArgPoint(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCommentsInArgPointCompleted(object state) {
            if ((this.GetCommentsInArgPointCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCommentsInArgPointCompleted(this, new GetCommentsInArgPointCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCommentsInArgPointAsync(int pointId) {
            this.GetCommentsInArgPointAsync(pointId, null);
        }
        
        public void GetCommentsInArgPointAsync(int pointId, object userState) {
            if ((this.onBeginGetCommentsInArgPointDelegate == null)) {
                this.onBeginGetCommentsInArgPointDelegate = new BeginOperationDelegate(this.OnBeginGetCommentsInArgPoint);
            }
            if ((this.onEndGetCommentsInArgPointDelegate == null)) {
                this.onEndGetCommentsInArgPointDelegate = new EndOperationDelegate(this.OnEndGetCommentsInArgPoint);
            }
            if ((this.onGetCommentsInArgPointCompletedDelegate == null)) {
                this.onGetCommentsInArgPointCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCommentsInArgPointCompleted);
            }
            base.InvokeAsync(this.onBeginGetCommentsInArgPointDelegate, new object[] {
                        pointId}, this.onEndGetCommentsInArgPointDelegate, this.onGetCommentsInArgPointCompletedDelegate, userState);
        }
        
        public Discussions.TdsSvcRef.SCommentReadInfo GetCommentReadInfo(int commentId, int callerId) {
            return base.Channel.GetCommentReadInfo(commentId, callerId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCommentReadInfo(int commentId, int callerId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCommentReadInfo(commentId, callerId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Discussions.TdsSvcRef.SCommentReadInfo EndGetCommentReadInfo(System.IAsyncResult result) {
            return base.Channel.EndGetCommentReadInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetCommentReadInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int commentId = ((int)(inValues[0]));
            int callerId = ((int)(inValues[1]));
            return this.BeginGetCommentReadInfo(commentId, callerId, callback, asyncState);
        }
        
        private object[] OnEndGetCommentReadInfo(System.IAsyncResult result) {
            Discussions.TdsSvcRef.SCommentReadInfo retVal = this.EndGetCommentReadInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCommentReadInfoCompleted(object state) {
            if ((this.GetCommentReadInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCommentReadInfoCompleted(this, new GetCommentReadInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCommentReadInfoAsync(int commentId, int callerId) {
            this.GetCommentReadInfoAsync(commentId, callerId, null);
        }
        
        public void GetCommentReadInfoAsync(int commentId, int callerId, object userState) {
            if ((this.onBeginGetCommentReadInfoDelegate == null)) {
                this.onBeginGetCommentReadInfoDelegate = new BeginOperationDelegate(this.OnBeginGetCommentReadInfo);
            }
            if ((this.onEndGetCommentReadInfoDelegate == null)) {
                this.onEndGetCommentReadInfoDelegate = new EndOperationDelegate(this.OnEndGetCommentReadInfo);
            }
            if ((this.onGetCommentReadInfoCompletedDelegate == null)) {
                this.onGetCommentReadInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCommentReadInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetCommentReadInfoDelegate, new object[] {
                        commentId,
                        callerId}, this.onEndGetCommentReadInfoDelegate, this.onGetCommentReadInfoCompletedDelegate, userState);
        }
        
        public Discussions.TdsSvcRef.SSource[] GetSourcesInArgPoint(int pointId) {
            return base.Channel.GetSourcesInArgPoint(pointId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSourcesInArgPoint(int pointId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSourcesInArgPoint(pointId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Discussions.TdsSvcRef.SSource[] EndGetSourcesInArgPoint(System.IAsyncResult result) {
            return base.Channel.EndGetSourcesInArgPoint(result);
        }
        
        private System.IAsyncResult OnBeginGetSourcesInArgPoint(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int pointId = ((int)(inValues[0]));
            return this.BeginGetSourcesInArgPoint(pointId, callback, asyncState);
        }
        
        private object[] OnEndGetSourcesInArgPoint(System.IAsyncResult result) {
            Discussions.TdsSvcRef.SSource[] retVal = this.EndGetSourcesInArgPoint(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSourcesInArgPointCompleted(object state) {
            if ((this.GetSourcesInArgPointCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSourcesInArgPointCompleted(this, new GetSourcesInArgPointCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSourcesInArgPointAsync(int pointId) {
            this.GetSourcesInArgPointAsync(pointId, null);
        }
        
        public void GetSourcesInArgPointAsync(int pointId, object userState) {
            if ((this.onBeginGetSourcesInArgPointDelegate == null)) {
                this.onBeginGetSourcesInArgPointDelegate = new BeginOperationDelegate(this.OnBeginGetSourcesInArgPoint);
            }
            if ((this.onEndGetSourcesInArgPointDelegate == null)) {
                this.onEndGetSourcesInArgPointDelegate = new EndOperationDelegate(this.OnEndGetSourcesInArgPoint);
            }
            if ((this.onGetSourcesInArgPointCompletedDelegate == null)) {
                this.onGetSourcesInArgPointCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSourcesInArgPointCompleted);
            }
            base.InvokeAsync(this.onBeginGetSourcesInArgPointDelegate, new object[] {
                        pointId}, this.onEndGetSourcesInArgPointDelegate, this.onGetSourcesInArgPointCompletedDelegate, userState);
        }
        
        public void AddSourceArgPoint(int pointId, string text, int callerId) {
            base.Channel.AddSourceArgPoint(pointId, text, callerId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddSourceArgPoint(int pointId, string text, int callerId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddSourceArgPoint(pointId, text, callerId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddSourceArgPoint(System.IAsyncResult result) {
            base.Channel.EndAddSourceArgPoint(result);
        }
        
        private System.IAsyncResult OnBeginAddSourceArgPoint(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int pointId = ((int)(inValues[0]));
            string text = ((string)(inValues[1]));
            int callerId = ((int)(inValues[2]));
            return this.BeginAddSourceArgPoint(pointId, text, callerId, callback, asyncState);
        }
        
        private object[] OnEndAddSourceArgPoint(System.IAsyncResult result) {
            this.EndAddSourceArgPoint(result);
            return null;
        }
        
        private void OnAddSourceArgPointCompleted(object state) {
            if ((this.AddSourceArgPointCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddSourceArgPointCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddSourceArgPointAsync(int pointId, string text, int callerId) {
            this.AddSourceArgPointAsync(pointId, text, callerId, null);
        }
        
        public void AddSourceArgPointAsync(int pointId, string text, int callerId, object userState) {
            if ((this.onBeginAddSourceArgPointDelegate == null)) {
                this.onBeginAddSourceArgPointDelegate = new BeginOperationDelegate(this.OnBeginAddSourceArgPoint);
            }
            if ((this.onEndAddSourceArgPointDelegate == null)) {
                this.onEndAddSourceArgPointDelegate = new EndOperationDelegate(this.OnEndAddSourceArgPoint);
            }
            if ((this.onAddSourceArgPointCompletedDelegate == null)) {
                this.onAddSourceArgPointCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddSourceArgPointCompleted);
            }
            base.InvokeAsync(this.onBeginAddSourceArgPointDelegate, new object[] {
                        pointId,
                        text,
                        callerId}, this.onEndAddSourceArgPointDelegate, this.onAddSourceArgPointCompletedDelegate, userState);
        }
        
        public bool MoveSourceUp(int sourceId) {
            return base.Channel.MoveSourceUp(sourceId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginMoveSourceUp(int sourceId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMoveSourceUp(sourceId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndMoveSourceUp(System.IAsyncResult result) {
            return base.Channel.EndMoveSourceUp(result);
        }
        
        private System.IAsyncResult OnBeginMoveSourceUp(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int sourceId = ((int)(inValues[0]));
            return this.BeginMoveSourceUp(sourceId, callback, asyncState);
        }
        
        private object[] OnEndMoveSourceUp(System.IAsyncResult result) {
            bool retVal = this.EndMoveSourceUp(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMoveSourceUpCompleted(object state) {
            if ((this.MoveSourceUpCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MoveSourceUpCompleted(this, new MoveSourceUpCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MoveSourceUpAsync(int sourceId) {
            this.MoveSourceUpAsync(sourceId, null);
        }
        
        public void MoveSourceUpAsync(int sourceId, object userState) {
            if ((this.onBeginMoveSourceUpDelegate == null)) {
                this.onBeginMoveSourceUpDelegate = new BeginOperationDelegate(this.OnBeginMoveSourceUp);
            }
            if ((this.onEndMoveSourceUpDelegate == null)) {
                this.onEndMoveSourceUpDelegate = new EndOperationDelegate(this.OnEndMoveSourceUp);
            }
            if ((this.onMoveSourceUpCompletedDelegate == null)) {
                this.onMoveSourceUpCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMoveSourceUpCompleted);
            }
            base.InvokeAsync(this.onBeginMoveSourceUpDelegate, new object[] {
                        sourceId}, this.onEndMoveSourceUpDelegate, this.onMoveSourceUpCompletedDelegate, userState);
        }
        
        public bool MoveSourceDown(int sourceId) {
            return base.Channel.MoveSourceDown(sourceId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginMoveSourceDown(int sourceId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMoveSourceDown(sourceId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndMoveSourceDown(System.IAsyncResult result) {
            return base.Channel.EndMoveSourceDown(result);
        }
        
        private System.IAsyncResult OnBeginMoveSourceDown(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int sourceId = ((int)(inValues[0]));
            return this.BeginMoveSourceDown(sourceId, callback, asyncState);
        }
        
        private object[] OnEndMoveSourceDown(System.IAsyncResult result) {
            bool retVal = this.EndMoveSourceDown(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMoveSourceDownCompleted(object state) {
            if ((this.MoveSourceDownCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MoveSourceDownCompleted(this, new MoveSourceDownCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MoveSourceDownAsync(int sourceId) {
            this.MoveSourceDownAsync(sourceId, null);
        }
        
        public void MoveSourceDownAsync(int sourceId, object userState) {
            if ((this.onBeginMoveSourceDownDelegate == null)) {
                this.onBeginMoveSourceDownDelegate = new BeginOperationDelegate(this.OnBeginMoveSourceDown);
            }
            if ((this.onEndMoveSourceDownDelegate == null)) {
                this.onEndMoveSourceDownDelegate = new EndOperationDelegate(this.OnEndMoveSourceDown);
            }
            if ((this.onMoveSourceDownCompletedDelegate == null)) {
                this.onMoveSourceDownCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMoveSourceDownCompleted);
            }
            base.InvokeAsync(this.onBeginMoveSourceDownDelegate, new object[] {
                        sourceId}, this.onEndMoveSourceDownDelegate, this.onMoveSourceDownCompletedDelegate, userState);
        }
        
        public Discussions.TdsSvcRef.SOrderInfo[] GetSourcesOrder(int pointId) {
            return base.Channel.GetSourcesOrder(pointId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSourcesOrder(int pointId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSourcesOrder(pointId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Discussions.TdsSvcRef.SOrderInfo[] EndGetSourcesOrder(System.IAsyncResult result) {
            return base.Channel.EndGetSourcesOrder(result);
        }
        
        private System.IAsyncResult OnBeginGetSourcesOrder(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int pointId = ((int)(inValues[0]));
            return this.BeginGetSourcesOrder(pointId, callback, asyncState);
        }
        
        private object[] OnEndGetSourcesOrder(System.IAsyncResult result) {
            Discussions.TdsSvcRef.SOrderInfo[] retVal = this.EndGetSourcesOrder(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSourcesOrderCompleted(object state) {
            if ((this.GetSourcesOrderCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSourcesOrderCompleted(this, new GetSourcesOrderCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSourcesOrderAsync(int pointId) {
            this.GetSourcesOrderAsync(pointId, null);
        }
        
        public void GetSourcesOrderAsync(int pointId, object userState) {
            if ((this.onBeginGetSourcesOrderDelegate == null)) {
                this.onBeginGetSourcesOrderDelegate = new BeginOperationDelegate(this.OnBeginGetSourcesOrder);
            }
            if ((this.onEndGetSourcesOrderDelegate == null)) {
                this.onEndGetSourcesOrderDelegate = new EndOperationDelegate(this.OnEndGetSourcesOrder);
            }
            if ((this.onGetSourcesOrderCompletedDelegate == null)) {
                this.onGetSourcesOrderCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSourcesOrderCompleted);
            }
            base.InvokeAsync(this.onBeginGetSourcesOrderDelegate, new object[] {
                        pointId}, this.onEndGetSourcesOrderDelegate, this.onGetSourcesOrderCompletedDelegate, userState);
        }
        
        public void AddAttachmentToPoint(int pointId, Discussions.TdsSvcRef.SInAttachment attachment, int callerId) {
            base.Channel.AddAttachmentToPoint(pointId, attachment, callerId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddAttachmentToPoint(int pointId, Discussions.TdsSvcRef.SInAttachment attachment, int callerId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddAttachmentToPoint(pointId, attachment, callerId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddAttachmentToPoint(System.IAsyncResult result) {
            base.Channel.EndAddAttachmentToPoint(result);
        }
        
        private System.IAsyncResult OnBeginAddAttachmentToPoint(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int pointId = ((int)(inValues[0]));
            Discussions.TdsSvcRef.SInAttachment attachment = ((Discussions.TdsSvcRef.SInAttachment)(inValues[1]));
            int callerId = ((int)(inValues[2]));
            return this.BeginAddAttachmentToPoint(pointId, attachment, callerId, callback, asyncState);
        }
        
        private object[] OnEndAddAttachmentToPoint(System.IAsyncResult result) {
            this.EndAddAttachmentToPoint(result);
            return null;
        }
        
        private void OnAddAttachmentToPointCompleted(object state) {
            if ((this.AddAttachmentToPointCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddAttachmentToPointCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddAttachmentToPointAsync(int pointId, Discussions.TdsSvcRef.SInAttachment attachment, int callerId) {
            this.AddAttachmentToPointAsync(pointId, attachment, callerId, null);
        }
        
        public void AddAttachmentToPointAsync(int pointId, Discussions.TdsSvcRef.SInAttachment attachment, int callerId, object userState) {
            if ((this.onBeginAddAttachmentToPointDelegate == null)) {
                this.onBeginAddAttachmentToPointDelegate = new BeginOperationDelegate(this.OnBeginAddAttachmentToPoint);
            }
            if ((this.onEndAddAttachmentToPointDelegate == null)) {
                this.onEndAddAttachmentToPointDelegate = new EndOperationDelegate(this.OnEndAddAttachmentToPoint);
            }
            if ((this.onAddAttachmentToPointCompletedDelegate == null)) {
                this.onAddAttachmentToPointCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddAttachmentToPointCompleted);
            }
            base.InvokeAsync(this.onBeginAddAttachmentToPointDelegate, new object[] {
                        pointId,
                        attachment,
                        callerId}, this.onEndAddAttachmentToPointDelegate, this.onAddAttachmentToPointCompletedDelegate, userState);
        }
        
        public void AddAttachmentToDiscussion(int discussionId, Discussions.TdsSvcRef.SInAttachment attachment, int callerId) {
            base.Channel.AddAttachmentToDiscussion(discussionId, attachment, callerId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddAttachmentToDiscussion(int discussionId, Discussions.TdsSvcRef.SInAttachment attachment, int callerId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddAttachmentToDiscussion(discussionId, attachment, callerId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddAttachmentToDiscussion(System.IAsyncResult result) {
            base.Channel.EndAddAttachmentToDiscussion(result);
        }
        
        private System.IAsyncResult OnBeginAddAttachmentToDiscussion(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int discussionId = ((int)(inValues[0]));
            Discussions.TdsSvcRef.SInAttachment attachment = ((Discussions.TdsSvcRef.SInAttachment)(inValues[1]));
            int callerId = ((int)(inValues[2]));
            return this.BeginAddAttachmentToDiscussion(discussionId, attachment, callerId, callback, asyncState);
        }
        
        private object[] OnEndAddAttachmentToDiscussion(System.IAsyncResult result) {
            this.EndAddAttachmentToDiscussion(result);
            return null;
        }
        
        private void OnAddAttachmentToDiscussionCompleted(object state) {
            if ((this.AddAttachmentToDiscussionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddAttachmentToDiscussionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddAttachmentToDiscussionAsync(int discussionId, Discussions.TdsSvcRef.SInAttachment attachment, int callerId) {
            this.AddAttachmentToDiscussionAsync(discussionId, attachment, callerId, null);
        }
        
        public void AddAttachmentToDiscussionAsync(int discussionId, Discussions.TdsSvcRef.SInAttachment attachment, int callerId, object userState) {
            if ((this.onBeginAddAttachmentToDiscussionDelegate == null)) {
                this.onBeginAddAttachmentToDiscussionDelegate = new BeginOperationDelegate(this.OnBeginAddAttachmentToDiscussion);
            }
            if ((this.onEndAddAttachmentToDiscussionDelegate == null)) {
                this.onEndAddAttachmentToDiscussionDelegate = new EndOperationDelegate(this.OnEndAddAttachmentToDiscussion);
            }
            if ((this.onAddAttachmentToDiscussionCompletedDelegate == null)) {
                this.onAddAttachmentToDiscussionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddAttachmentToDiscussionCompleted);
            }
            base.InvokeAsync(this.onBeginAddAttachmentToDiscussionDelegate, new object[] {
                        discussionId,
                        attachment,
                        callerId}, this.onEndAddAttachmentToDiscussionDelegate, this.onAddAttachmentToDiscussionCompletedDelegate, userState);
        }
        
        public void AddAttachmentToOwnAvatar(Discussions.TdsSvcRef.SInAttachment attachment, int callerId) {
            base.Channel.AddAttachmentToOwnAvatar(attachment, callerId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddAttachmentToOwnAvatar(Discussions.TdsSvcRef.SInAttachment attachment, int callerId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddAttachmentToOwnAvatar(attachment, callerId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddAttachmentToOwnAvatar(System.IAsyncResult result) {
            base.Channel.EndAddAttachmentToOwnAvatar(result);
        }
        
        private System.IAsyncResult OnBeginAddAttachmentToOwnAvatar(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Discussions.TdsSvcRef.SInAttachment attachment = ((Discussions.TdsSvcRef.SInAttachment)(inValues[0]));
            int callerId = ((int)(inValues[1]));
            return this.BeginAddAttachmentToOwnAvatar(attachment, callerId, callback, asyncState);
        }
        
        private object[] OnEndAddAttachmentToOwnAvatar(System.IAsyncResult result) {
            this.EndAddAttachmentToOwnAvatar(result);
            return null;
        }
        
        private void OnAddAttachmentToOwnAvatarCompleted(object state) {
            if ((this.AddAttachmentToOwnAvatarCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddAttachmentToOwnAvatarCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddAttachmentToOwnAvatarAsync(Discussions.TdsSvcRef.SInAttachment attachment, int callerId) {
            this.AddAttachmentToOwnAvatarAsync(attachment, callerId, null);
        }
        
        public void AddAttachmentToOwnAvatarAsync(Discussions.TdsSvcRef.SInAttachment attachment, int callerId, object userState) {
            if ((this.onBeginAddAttachmentToOwnAvatarDelegate == null)) {
                this.onBeginAddAttachmentToOwnAvatarDelegate = new BeginOperationDelegate(this.OnBeginAddAttachmentToOwnAvatar);
            }
            if ((this.onEndAddAttachmentToOwnAvatarDelegate == null)) {
                this.onEndAddAttachmentToOwnAvatarDelegate = new EndOperationDelegate(this.OnEndAddAttachmentToOwnAvatar);
            }
            if ((this.onAddAttachmentToOwnAvatarCompletedDelegate == null)) {
                this.onAddAttachmentToOwnAvatarCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddAttachmentToOwnAvatarCompleted);
            }
            base.InvokeAsync(this.onBeginAddAttachmentToOwnAvatarDelegate, new object[] {
                        attachment,
                        callerId}, this.onEndAddAttachmentToOwnAvatarDelegate, this.onAddAttachmentToOwnAvatarCompletedDelegate, userState);
        }
        
        public void RemoveAttachment(int attachmentId) {
            base.Channel.RemoveAttachment(attachmentId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRemoveAttachment(int attachmentId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveAttachment(attachmentId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndRemoveAttachment(System.IAsyncResult result) {
            base.Channel.EndRemoveAttachment(result);
        }
        
        private System.IAsyncResult OnBeginRemoveAttachment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int attachmentId = ((int)(inValues[0]));
            return this.BeginRemoveAttachment(attachmentId, callback, asyncState);
        }
        
        private object[] OnEndRemoveAttachment(System.IAsyncResult result) {
            this.EndRemoveAttachment(result);
            return null;
        }
        
        private void OnRemoveAttachmentCompleted(object state) {
            if ((this.RemoveAttachmentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveAttachmentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveAttachmentAsync(int attachmentId) {
            this.RemoveAttachmentAsync(attachmentId, null);
        }
        
        public void RemoveAttachmentAsync(int attachmentId, object userState) {
            if ((this.onBeginRemoveAttachmentDelegate == null)) {
                this.onBeginRemoveAttachmentDelegate = new BeginOperationDelegate(this.OnBeginRemoveAttachment);
            }
            if ((this.onEndRemoveAttachmentDelegate == null)) {
                this.onEndRemoveAttachmentDelegate = new EndOperationDelegate(this.OnEndRemoveAttachment);
            }
            if ((this.onRemoveAttachmentCompletedDelegate == null)) {
                this.onRemoveAttachmentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveAttachmentCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveAttachmentDelegate, new object[] {
                        attachmentId}, this.onEndRemoveAttachmentDelegate, this.onRemoveAttachmentCompletedDelegate, userState);
        }
        
        public bool MoveAttachmentUp(int attachmentId) {
            return base.Channel.MoveAttachmentUp(attachmentId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginMoveAttachmentUp(int attachmentId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMoveAttachmentUp(attachmentId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndMoveAttachmentUp(System.IAsyncResult result) {
            return base.Channel.EndMoveAttachmentUp(result);
        }
        
        private System.IAsyncResult OnBeginMoveAttachmentUp(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int attachmentId = ((int)(inValues[0]));
            return this.BeginMoveAttachmentUp(attachmentId, callback, asyncState);
        }
        
        private object[] OnEndMoveAttachmentUp(System.IAsyncResult result) {
            bool retVal = this.EndMoveAttachmentUp(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMoveAttachmentUpCompleted(object state) {
            if ((this.MoveAttachmentUpCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MoveAttachmentUpCompleted(this, new MoveAttachmentUpCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MoveAttachmentUpAsync(int attachmentId) {
            this.MoveAttachmentUpAsync(attachmentId, null);
        }
        
        public void MoveAttachmentUpAsync(int attachmentId, object userState) {
            if ((this.onBeginMoveAttachmentUpDelegate == null)) {
                this.onBeginMoveAttachmentUpDelegate = new BeginOperationDelegate(this.OnBeginMoveAttachmentUp);
            }
            if ((this.onEndMoveAttachmentUpDelegate == null)) {
                this.onEndMoveAttachmentUpDelegate = new EndOperationDelegate(this.OnEndMoveAttachmentUp);
            }
            if ((this.onMoveAttachmentUpCompletedDelegate == null)) {
                this.onMoveAttachmentUpCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMoveAttachmentUpCompleted);
            }
            base.InvokeAsync(this.onBeginMoveAttachmentUpDelegate, new object[] {
                        attachmentId}, this.onEndMoveAttachmentUpDelegate, this.onMoveAttachmentUpCompletedDelegate, userState);
        }
        
        public bool MoveAttachmentDown(int attachmentId) {
            return base.Channel.MoveAttachmentDown(attachmentId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginMoveAttachmentDown(int attachmentId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMoveAttachmentDown(attachmentId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndMoveAttachmentDown(System.IAsyncResult result) {
            return base.Channel.EndMoveAttachmentDown(result);
        }
        
        private System.IAsyncResult OnBeginMoveAttachmentDown(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int attachmentId = ((int)(inValues[0]));
            return this.BeginMoveAttachmentDown(attachmentId, callback, asyncState);
        }
        
        private object[] OnEndMoveAttachmentDown(System.IAsyncResult result) {
            bool retVal = this.EndMoveAttachmentDown(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMoveAttachmentDownCompleted(object state) {
            if ((this.MoveAttachmentDownCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MoveAttachmentDownCompleted(this, new MoveAttachmentDownCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MoveAttachmentDownAsync(int attachmentId) {
            this.MoveAttachmentDownAsync(attachmentId, null);
        }
        
        public void MoveAttachmentDownAsync(int attachmentId, object userState) {
            if ((this.onBeginMoveAttachmentDownDelegate == null)) {
                this.onBeginMoveAttachmentDownDelegate = new BeginOperationDelegate(this.OnBeginMoveAttachmentDown);
            }
            if ((this.onEndMoveAttachmentDownDelegate == null)) {
                this.onEndMoveAttachmentDownDelegate = new EndOperationDelegate(this.OnEndMoveAttachmentDown);
            }
            if ((this.onMoveAttachmentDownCompletedDelegate == null)) {
                this.onMoveAttachmentDownCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMoveAttachmentDownCompleted);
            }
            base.InvokeAsync(this.onBeginMoveAttachmentDownDelegate, new object[] {
                        attachmentId}, this.onEndMoveAttachmentDownDelegate, this.onMoveAttachmentDownCompletedDelegate, userState);
        }
        
        public Discussions.TdsSvcRef.SOrderInfo[] GetAttachmentsOrder(int pointId) {
            return base.Channel.GetAttachmentsOrder(pointId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAttachmentsOrder(int pointId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAttachmentsOrder(pointId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Discussions.TdsSvcRef.SOrderInfo[] EndGetAttachmentsOrder(System.IAsyncResult result) {
            return base.Channel.EndGetAttachmentsOrder(result);
        }
        
        private System.IAsyncResult OnBeginGetAttachmentsOrder(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int pointId = ((int)(inValues[0]));
            return this.BeginGetAttachmentsOrder(pointId, callback, asyncState);
        }
        
        private object[] OnEndGetAttachmentsOrder(System.IAsyncResult result) {
            Discussions.TdsSvcRef.SOrderInfo[] retVal = this.EndGetAttachmentsOrder(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAttachmentsOrderCompleted(object state) {
            if ((this.GetAttachmentsOrderCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAttachmentsOrderCompleted(this, new GetAttachmentsOrderCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAttachmentsOrderAsync(int pointId) {
            this.GetAttachmentsOrderAsync(pointId, null);
        }
        
        public void GetAttachmentsOrderAsync(int pointId, object userState) {
            if ((this.onBeginGetAttachmentsOrderDelegate == null)) {
                this.onBeginGetAttachmentsOrderDelegate = new BeginOperationDelegate(this.OnBeginGetAttachmentsOrder);
            }
            if ((this.onEndGetAttachmentsOrderDelegate == null)) {
                this.onEndGetAttachmentsOrderDelegate = new EndOperationDelegate(this.OnEndGetAttachmentsOrder);
            }
            if ((this.onGetAttachmentsOrderCompletedDelegate == null)) {
                this.onGetAttachmentsOrderCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAttachmentsOrderCompleted);
            }
            base.InvokeAsync(this.onBeginGetAttachmentsOrderDelegate, new object[] {
                        pointId}, this.onEndGetAttachmentsOrderDelegate, this.onGetAttachmentsOrderCompletedDelegate, userState);
        }
        
        public Discussions.TdsSvcRef.SOutAttachment[] GetAttachmentsInArgPoint(int pointId, bool includeMediaData) {
            return base.Channel.GetAttachmentsInArgPoint(pointId, includeMediaData);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAttachmentsInArgPoint(int pointId, bool includeMediaData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAttachmentsInArgPoint(pointId, includeMediaData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Discussions.TdsSvcRef.SOutAttachment[] EndGetAttachmentsInArgPoint(System.IAsyncResult result) {
            return base.Channel.EndGetAttachmentsInArgPoint(result);
        }
        
        private System.IAsyncResult OnBeginGetAttachmentsInArgPoint(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int pointId = ((int)(inValues[0]));
            bool includeMediaData = ((bool)(inValues[1]));
            return this.BeginGetAttachmentsInArgPoint(pointId, includeMediaData, callback, asyncState);
        }
        
        private object[] OnEndGetAttachmentsInArgPoint(System.IAsyncResult result) {
            Discussions.TdsSvcRef.SOutAttachment[] retVal = this.EndGetAttachmentsInArgPoint(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAttachmentsInArgPointCompleted(object state) {
            if ((this.GetAttachmentsInArgPointCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAttachmentsInArgPointCompleted(this, new GetAttachmentsInArgPointCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAttachmentsInArgPointAsync(int pointId, bool includeMediaData) {
            this.GetAttachmentsInArgPointAsync(pointId, includeMediaData, null);
        }
        
        public void GetAttachmentsInArgPointAsync(int pointId, bool includeMediaData, object userState) {
            if ((this.onBeginGetAttachmentsInArgPointDelegate == null)) {
                this.onBeginGetAttachmentsInArgPointDelegate = new BeginOperationDelegate(this.OnBeginGetAttachmentsInArgPoint);
            }
            if ((this.onEndGetAttachmentsInArgPointDelegate == null)) {
                this.onEndGetAttachmentsInArgPointDelegate = new EndOperationDelegate(this.OnEndGetAttachmentsInArgPoint);
            }
            if ((this.onGetAttachmentsInArgPointCompletedDelegate == null)) {
                this.onGetAttachmentsInArgPointCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAttachmentsInArgPointCompleted);
            }
            base.InvokeAsync(this.onBeginGetAttachmentsInArgPointDelegate, new object[] {
                        pointId,
                        includeMediaData}, this.onEndGetAttachmentsInArgPointDelegate, this.onGetAttachmentsInArgPointCompletedDelegate, userState);
        }
    }
}
