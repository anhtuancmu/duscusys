<Application x:Class="DistributedEditor.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:s="http://schemas.microsoft.com/surface/2008"  
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        
        <ResourceDictionary>
            <ImageBrush x:Key="editBrush" ImageSource="Resources/edit.png" Stretch="Uniform"/>
            <ImageBrush x:Key="typeBrush" ImageSource="Resources/word.png" Stretch="Uniform"/>

            <Style TargetType="Label">
                <Setter Property="FontSize" Value="17"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="FontFamily" Value="Segoe UI Light"/>
            </Style>

            <Style TargetType="{x:Type TextElement}">
                <Setter Property="FontFamily" Value="Segoe UI Light" />
            </Style>

            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="FontFamily" Value="Segoe UI Light" />
            </Style>

            <Style x:Key="roundButtonStyle" TargetType="{x:Type s:SurfaceButton}">
                <Setter Property="FontFamily" Value="Segoe UI Light" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Grid x:Name="Grid" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <Rectangle x:Name="ButtonBody" Fill="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RadiusX="5" RadiusY="5"/>
                                <Rectangle x:Name="PressOverlay" Fill="LightBlue" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RadiusX="5" RadiusY="5"/>
                                <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressOverlay">
                                                    <SplineDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressOverlay">
                                                    <SplineDoubleKeyFrame KeyTime="0:0:0.15" Value="0"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                    <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type s:SurfaceColors}}}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Fill" TargetName="ButtonBody" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type s:SurfaceColors}}}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type s:SurfaceColors}}}"/>
                                    <Setter Property="Opacity" TargetName="Content" Value="0.33"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <LinearGradientBrush x:Key="CheckRadioFillNormal">
                <GradientStop Color="#FFD2D4D2" Offset="0"/>
                <GradientStop Color="#FFFFFFFF" Offset="1"/>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="CheckRadioStrokeNormal">
                <GradientStop Color="#FF004C94" Offset="0"/>
                <GradientStop Color="#FF003C74" Offset="1"/>
            </LinearGradientBrush>

            <Style x:Key="StrokeThicknessRadioButtonStyle" TargetType="{x:Type RadioButton}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="Background" Value="{StaticResource CheckRadioFillNormal}"/>
                <Setter Property="BorderBrush" Value="{StaticResource CheckRadioStrokeNormal}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RadioButton}">
                            <Grid Width="40" Height="38">
                                <Rectangle Opacity="0" Stroke="#FF979797" RadiusX="2" RadiusY="2" HorizontalAlignment="Stretch" Margin="0,0,0,0" x:Name="rectangle" VerticalAlignment="Stretch">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush EndPoint="0.55,1" StartPoint="0.55,0.026">
                                            <GradientStop Color="#FF979797" Offset="0"/>
                                            <GradientStop Color="#FFFFFFFF" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Ellipse Fill="#FF000000" Stroke="{x:Null}" HorizontalAlignment="Center" Margin="0,0,0,0" VerticalAlignment="Center" Width="{TemplateBinding FontSize}" Height="{TemplateBinding FontSize}"/>
                                <Rectangle Opacity="0" Stroke="{x:Null}" RadiusX="2" RadiusY="2" x:Name="rectangle_Copy" Margin="1.749,0.763,1.964,2.765">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush EndPoint="0.558,0.989" StartPoint="0.55,0.026">
                                            <GradientStop Color="#91FFFFFF" Offset="0"/>
                                            <GradientStop Color="#16FFFFFF" Offset="0.447"/>
                                            <GradientStop Color="#89FFFFFF" Offset="0.288"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Opacity" TargetName="rectangle" Value="0.995"/>
                                    <Setter Property="Opacity" TargetName="rectangle_Copy" Value="1"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Fill" TargetName="rectangle">
                                        <Setter.Value>
                                            <LinearGradientBrush EndPoint="0.55,1" StartPoint="0.55,0.026">
                                                <GradientStop Color="#FF438A7E" Offset="0"/>
                                                <GradientStop Color="#FFD6F2ED" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Opacity" TargetName="rectangle" Value="1"/>
                                    <Setter Property="Opacity" TargetName="rectangle_Copy" Value="1"/>
                                    <Setter Property="Stroke" TargetName="rectangle" Value="#FF3C6A62"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Stroke" TargetName="rectangle" Value="#FF6A6A6A"/>
                                    <Setter Property="Fill" TargetName="rectangle">
                                        <Setter.Value>
                                            <LinearGradientBrush EndPoint="0.55,1" StartPoint="0.55,0.026">
                                                <GradientStop Color="#FF686868" Offset="0"/>
                                                <GradientStop Color="#FFBFBFBF" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Opacity" TargetName="rectangle" Value="1"/>
                                    <Setter Property="Opacity" TargetName="rectangle_Copy" Value="1"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
        
    </Application.Resources>
</Application>
