<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:Custom="http://schemas.microsoft.com/surface/2008"
    xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing"
    x:Class="DistributedEditor.Palette"
    xmlns:Petzold="clr-namespace:Petzold.Media2D"
    mc:Ignorable="d"
    d:DesignHeight="567" d:DesignWidth="80">
    <UserControl.Resources>
        <Style x:Key="CircularSurfaceToggleButtonStyle1" TargetType="{x:Type Custom:SurfaceToggleButton}">
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="7" />
            <Setter Property="Background"
                    Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
            <Setter Property="Foreground"
                    Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Custom:SurfaceToggleButton}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="Press">
                                <DoubleAnimationUsingKeyFrames BeginTime="0"
                                                               Storyboard.TargetProperty="(UIElement.Opacity)"
                                                               Storyboard.TargetName="PressOverlay">
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.1" Value="1" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="Release">
                                <DoubleAnimationUsingKeyFrames BeginTime="0"
                                                               Storyboard.TargetProperty="(UIElement.Opacity)"
                                                               Storyboard.TargetName="PressOverlay">
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.25" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="Grid" Background="Transparent"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Border x:Name="ButtonBody" BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <Border x:Name="PressOverlay"
                                    Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Content="{TemplateBinding Content}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" TargetName="ButtonBody"
                                        Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames BeginTime="0"
                                                                           Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                           Storyboard.TargetName="PressOverlay">
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.1" Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames BeginTime="0"
                                                                           Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                           Storyboard.TargetName="PressOverlay">
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.25" Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsPressed" Value="True" />
                                    <Condition Property="IsChecked" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="PressOverlay"
                                        Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsEnabled" Value="False" />
                                    <Condition Property="IsChecked" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="ButtonBody"
                                        Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                                <Setter Property="Opacity" TargetName="Content" Value="0.6" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsEnabled" Value="False" />
                                    <Condition Property="IsChecked" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                                <Setter Property="Background" TargetName="ButtonBody"
                                        Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                                <Setter Property="Opacity" TargetName="Content" Value="0.33" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.BasedOn>
                <Style TargetType="{x:Type Control}">
                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                    <Setter Property="SnapsToDevicePixels" Value="False" />
                    <Setter Property="FontFamily" Value="Segoe360" />
                    <Setter Property="FontWeight" Value="Normal" />
                    <Setter Property="FontSize" Value="17" />
                    <Setter Property="Padding" Value="6,2,10,10" />
                    <Setter Property="MinHeight" Value="38" />
                    <Setter Property="MinWidth" Value="38" />
                    <Setter Property="Margin" Value="1" />
                    <Setter Property="HorizontalContentAlignment" Value="Left" />
                    <Setter Property="VerticalContentAlignment" Value="Top" />
                    <Setter Property="BorderThickness" Value="2" />
                </Style>
            </Style.BasedOn>
        </Style>
        <Style x:Key="BtnFocusControlStyle1" TargetType="{x:Type Control}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Control}">
                        <Grid />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SurfaceToggleButtonStyle1" TargetType="{x:Type Custom:SurfaceToggleButton}">
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="7" />
            <Setter Property="Background"
                    Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
            <Setter Property="Foreground"
                    Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Custom:SurfaceToggleButton}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="Press">
                                <DoubleAnimationUsingKeyFrames BeginTime="0"
                                                               Storyboard.TargetProperty="(UIElement.Opacity)"
                                                               Storyboard.TargetName="PressOverlay">
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.1" Value="1" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="Release">
                                <DoubleAnimationUsingKeyFrames BeginTime="0"
                                                               Storyboard.TargetProperty="(UIElement.Opacity)"
                                                               Storyboard.TargetName="PressOverlay">
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.25" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="Grid" Background="Transparent"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Border x:Name="ButtonBody" BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <Border x:Name="PressOverlay"
                                    Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}"
                                    Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Content="{TemplateBinding Content}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" TargetName="ButtonBody"
                                        Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames BeginTime="0"
                                                                           Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                           Storyboard.TargetName="PressOverlay">
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.1" Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames BeginTime="0"
                                                                           Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                           Storyboard.TargetName="PressOverlay">
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.25" Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsPressed" Value="True" />
                                    <Condition Property="IsChecked" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="PressOverlay"
                                        Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsEnabled" Value="False" />
                                    <Condition Property="IsChecked" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="ButtonBody"
                                        Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                                <Setter Property="Opacity" TargetName="Content" Value="0.6" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsEnabled" Value="False" />
                                    <Condition Property="IsChecked" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                                <Setter Property="Background" TargetName="ButtonBody"
                                        Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                                <Setter Property="Opacity" TargetName="Content" Value="0.33" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.BasedOn>
                <Style TargetType="{x:Type Control}">
                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                    <Setter Property="SnapsToDevicePixels" Value="False" />
                    <Setter Property="FontFamily" Value="Segoe360" />
                    <Setter Property="FontWeight" Value="Normal" />
                    <Setter Property="FontSize" Value="17" />
                    <Setter Property="Padding" Value="6,2,10,10" />
                    <Setter Property="MinHeight" Value="38" />
                    <Setter Property="MinWidth" Value="38" />
                    <Setter Property="Margin" Value="1" />
                    <Setter Property="HorizontalContentAlignment" Value="Left" />
                    <Setter Property="VerticalContentAlignment" Value="Top" />
                    <Setter Property="BorderThickness" Value="2" />
                </Style>
            </Style.BasedOn>
        </Style>
        <Style x:Key="SurfaceToggleButtonStyle2" TargetType="{x:Type Custom:SurfaceToggleButton}">
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="7" />
            <Setter Property="Background"
                    Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
            <Setter Property="Foreground"
                    Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Custom:SurfaceToggleButton}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="Press">
                                <DoubleAnimationUsingKeyFrames BeginTime="0"
                                                               Storyboard.TargetProperty="(UIElement.Opacity)"
                                                               Storyboard.TargetName="PressOverlay">
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.1" Value="1" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="Release">
                                <DoubleAnimationUsingKeyFrames BeginTime="0"
                                                               Storyboard.TargetProperty="(UIElement.Opacity)"
                                                               Storyboard.TargetName="PressOverlay">
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.25" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="Grid" Background="Transparent"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Border x:Name="ButtonBody" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    CornerRadius="30" BorderBrush="Black" BorderThickness="3" />
                            <Border x:Name="PressOverlay"
                                    Background="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}"
                                    Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    CornerRadius="8" />
                            <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Content="{TemplateBinding Content}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" TargetName="ButtonBody"
                                        Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames BeginTime="0"
                                                                           Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                           Storyboard.TargetName="PressOverlay">
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.1" Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames BeginTime="0"
                                                                           Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                           Storyboard.TargetName="PressOverlay">
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.25" Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsPressed" Value="True" />
                                    <Condition Property="IsChecked" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="PressOverlay"
                                        Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsEnabled" Value="False" />
                                    <Condition Property="IsChecked" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="ButtonBody"
                                        Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                                <Setter Property="Opacity" TargetName="Content" Value="0.6" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsEnabled" Value="False" />
                                    <Condition Property="IsChecked" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                                <Setter Property="Background" TargetName="ButtonBody"
                                        Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type Custom:SurfaceColors}}}" />
                                <Setter Property="Opacity" TargetName="Content" Value="0.33" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.BasedOn>
                <Style TargetType="{x:Type Control}">
                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                    <Setter Property="SnapsToDevicePixels" Value="False" />
                    <Setter Property="FontFamily" Value="Segoe360" />
                    <Setter Property="FontWeight" Value="Normal" />
                    <Setter Property="FontSize" Value="17" />
                    <Setter Property="Padding" Value="6,2,10,10" />
                    <Setter Property="MinHeight" Value="38" />
                    <Setter Property="MinWidth" Value="38" />
                    <Setter Property="Margin" Value="1" />
                    <Setter Property="HorizontalContentAlignment" Value="Left" />
                    <Setter Property="VerticalContentAlignment" Value="Top" />
                    <Setter Property="BorderThickness" Value="2" />
                </Style>
            </Style.BasedOn>
        </Style>
    </UserControl.Resources>
    <UserControl.Effect>
        <DropShadowEffect Color="#FF494949" BlurRadius="20" />
    </UserControl.Effect>
    <Border x:Name="bdr" BorderThickness="4" Background="#FF747474" CornerRadius="5">
        <UniformGrid Rows="7" Columns="1">
            <Custom:SurfaceToggleButton x:Name="btnCluster" Background="{x:Null}" Width="60" Height="60"
                                        Click="btnCluster_Click">
                <Canvas>
                    <Ellipse
                        Height="20"
                        Width="20"
                        Stroke="Black"
                        StrokeThickness="2" Canvas.Top="-21.5" Canvas.Left="-13" />
                    <Ellipse
                        Height="20"
                        Width="20"
                        Stroke="Black"
                        StrokeThickness="2" Canvas.Left="-24" Canvas.Top="0.5" />
                    <Ellipse
                        Height="20"
                        Width="20"
                        Stroke="Black"
                        StrokeThickness="2" Canvas.Left="-1" Canvas.Top="-0.5" />
                </Canvas>
            </Custom:SurfaceToggleButton>
            <Custom:SurfaceToggleButton x:Name="btnClusterLink" Background="{x:Null}" Width="60" Height="60"
                                        Click="btnClusterLink_Click">
                <Canvas>
                    <Ellipse
                        Height="15"
                        Width="15"
                        Stroke="Black"
                        StrokeThickness="2" Canvas.Top="-23.75" Canvas.Left="-26" />
                    <Ellipse
                        Canvas.Top="4.25"
                        Height="15"
                        Width="15"
                        Stroke="Black"
                        StrokeThickness="2" Canvas.Left="2" />
                    <Petzold:ArrowLine
                        X1="15" Y1="15" X2="32" Y2="32"
                        Stroke="Black"
                        ArrowLength="10"
                        StrokeThickness="2" Canvas.Top="-25.75" Canvas.Left="-28" />
                </Canvas>
            </Custom:SurfaceToggleButton>
            <Custom:SurfaceToggleButton x:Name="btnClusterLink2" Background="{x:Null}" Width="60" Height="60"
                                        Click="btnClusterLink2_Click">
                <Canvas>
                    <Ellipse
                        Height="15"
                        Width="15"
                        Stroke="Black"
                        StrokeThickness="2" Canvas.Top="-23.75" Canvas.Left="-26" />
                    <Ellipse
                        Canvas.Top="4.25"
                        Height="15"
                        Width="15"
                        Stroke="Black"
                        StrokeThickness="2" Canvas.Left="2" />
                    <Petzold:ArrowLine
                        X1="15" Y1="15" X2="32" Y2="32"
                        Stroke="Black"
                        ArrowEnds="Both"
                        ArrowLength="10"
                        StrokeThickness="2" Canvas.Top="-25.75" Canvas.Left="-28" />
                </Canvas>
            </Custom:SurfaceToggleButton>
            <Custom:SurfaceToggleButton x:Name="btnText" Background="{x:Null}" Width="60" Height="60"
                                        Click="btnText_Click">
                <Canvas>
                    <Label Content="T" FontSize="36" Foreground="Black" HorizontalAlignment="Center" Canvas.Left="-12"
                           Canvas.Top="-29" FontFamily="Segoe UI" FontWeight="Bold" />
                </Canvas>
            </Custom:SurfaceToggleButton>
            <Custom:SurfaceToggleButton x:Name="btnFreeForm" Background="{x:Null}" Width="60" Height="60"
                                        Click="btnFreeForm_Click">
                <Path Stroke="Black" StrokeThickness="4"
                      Data="M 1,10 C 15,70 30,-20 35,50" />
            </Custom:SurfaceToggleButton>
            <!--
            <Custom:SurfaceToggleButton x:Name="btnSegment" Background="{x:Null}" Width="60" Height="60" Click="btnSegment_Click">
				<Line
					X1="10" Y1="10"
					X2="30" Y2="50"
					Stroke="Black"
					StrokeThickness="4"/> 
			</Custom:SurfaceToggleButton> 
            -->
            <!--
			<Custom:SurfaceToggleButton x:Name="btnArrow" Background="{x:Null}" Width="60" Height="60" Click="btnArrow_Click">
				<Petzold:ArrowLine
					X1="10" Y1="10"
					X2="40" Y2="40"
					Stroke="Black"
					StrokeThickness="4"/>
			</Custom:SurfaceToggleButton>
			-->
            <Custom:SurfaceToggleButton x:Name="btnRemove" Background="Transparent" Width="60" Height="60"
                                        Click="btnRemove_Click"
                                        Style="{DynamicResource CircularSurfaceToggleButtonStyle1}">
                <Canvas>
                    <Label Canvas.Left="-15.25" Content="X" FontSize="36" Foreground="DarkRed" Canvas.Top="-38.5"
                           FontFamily="Segoe UI" FontWeight="Bold" />
                </Canvas>
            </Custom:SurfaceToggleButton>
            <Custom:SurfaceToggleButton x:Name="btnReset" Background="Transparent" Click="btnReset_Click" Width="60"
                                        Height="60" HorizontalAlignment="Center"
                                        Style="{DynamicResource CircularSurfaceToggleButtonStyle1}">
                <Canvas>
                    <Label Canvas.Left="-17" Content="res" FontSize="25" Foreground="DarkRed" Canvas.Top="-29"
                           HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="Segoe UI"
                           FontWeight="Bold" />
                </Canvas>
            </Custom:SurfaceToggleButton>
        </UniformGrid>
    </Border>
</UserControl>