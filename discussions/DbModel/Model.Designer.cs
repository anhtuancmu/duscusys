//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("db", "TopicArgPoint", "Topic", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Discussions.DbModel.Topic), "ArgPoint", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Discussions.DbModel.ArgPoint))]
[assembly: EdmRelationshipAttribute("db", "DiscussionTopic", "Discussion", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Discussions.DbModel.Discussion), "Topic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Discussions.DbModel.Topic))]
[assembly: EdmRelationshipAttribute("db", "ArgPointComment", "ArgPoint", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Discussions.DbModel.ArgPoint), "Comment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Discussions.DbModel.Comment))]
[assembly: EdmRelationshipAttribute("db", "ArgPointAttachment", "ArgPoint", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Discussions.DbModel.ArgPoint), "Attachment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Discussions.DbModel.Attachment))]
[assembly: EdmRelationshipAttribute("db", "TopicPerson", "Topic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Discussions.DbModel.Topic), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Discussions.DbModel.Person))]
[assembly: EdmRelationshipAttribute("db", "PersonArgPoint", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Discussions.DbModel.Person), "ArgPoint", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Discussions.DbModel.ArgPoint))]
[assembly: EdmRelationshipAttribute("db", "PersonComment", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Discussions.DbModel.Person), "Comment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Discussions.DbModel.Comment))]
[assembly: EdmRelationshipAttribute("db", "PersonAttachment", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Discussions.DbModel.Person), "Attachment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Discussions.DbModel.Attachment))]
[assembly: EdmRelationshipAttribute("db", "DiscussionAttachment", "Discussion", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Discussions.DbModel.Discussion), "Attachment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Discussions.DbModel.Attachment))]
[assembly: EdmRelationshipAttribute("db", "PersonGeneralSide", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Discussions.DbModel.Person), "GeneralSide", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Discussions.DbModel.GeneralSide))]
[assembly: EdmRelationshipAttribute("db", "DiscussionGeneralSide", "Discussion", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Discussions.DbModel.Discussion), "GeneralSide", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Discussions.DbModel.GeneralSide))]
[assembly: EdmRelationshipAttribute("db", "RichTextSource", "RichText", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Discussions.DbModel.RichText), "Source", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Discussions.DbModel.Source))]
[assembly: EdmRelationshipAttribute("db", "DiscussionRichText", "Discussion", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Discussions.DbModel.Discussion), "RichText", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Discussions.DbModel.RichText))]
[assembly: EdmRelationshipAttribute("db", "ArgPointRichText", "ArgPoint", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Discussions.DbModel.ArgPoint), "RichText", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Discussions.DbModel.RichText))]
[assembly: EdmRelationshipAttribute("db", "PersonScreenshot", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Discussions.DbModel.Person), "Screenshot", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Discussions.DbModel.Annotation))]
[assembly: EdmRelationshipAttribute("db", "DiscussionAnnotation", "Discussion", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Discussions.DbModel.Discussion), "Annotation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Discussions.DbModel.Annotation))]
[assembly: EdmRelationshipAttribute("db", "PersonAttachment1", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Discussions.DbModel.Person), "Attachment", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Discussions.DbModel.Attachment))]
[assembly: EdmRelationshipAttribute("db", "PersonSeat", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Discussions.DbModel.Person), "Seat", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Discussions.DbModel.Seat), true)]
[assembly: EdmRelationshipAttribute("db", "PersonSession", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Discussions.DbModel.Person), "Session", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Discussions.DbModel.Session), true)]
[assembly: EdmRelationshipAttribute("db", "AttachmentMediaData", "Attachment", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Discussions.DbModel.Attachment), "MediaData", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Discussions.DbModel.MediaData))]

#endregion

namespace Discussions.DbModel
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DiscCtx : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DiscCtx object using the connection string found in the 'DiscCtx' section of the application configuration file.
        /// </summary>
        public DiscCtx() : base("name=DiscCtx", "DiscCtx")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DiscCtx object.
        /// </summary>
        public DiscCtx(string connectionString) : base(connectionString, "DiscCtx")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DiscCtx object.
        /// </summary>
        public DiscCtx(EntityConnection connection) : base(connection, "DiscCtx")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Person> Person
        {
            get
            {
                if ((_Person == null))
                {
                    _Person = base.CreateObjectSet<Person>("Person");
                }
                return _Person;
            }
        }
        private ObjectSet<Person> _Person;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Discussion> Discussion
        {
            get
            {
                if ((_Discussion == null))
                {
                    _Discussion = base.CreateObjectSet<Discussion>("Discussion");
                }
                return _Discussion;
            }
        }
        private ObjectSet<Discussion> _Discussion;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ArgPoint> ArgPoint
        {
            get
            {
                if ((_ArgPoint == null))
                {
                    _ArgPoint = base.CreateObjectSet<ArgPoint>("ArgPoint");
                }
                return _ArgPoint;
            }
        }
        private ObjectSet<ArgPoint> _ArgPoint;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Topic> Topic
        {
            get
            {
                if ((_Topic == null))
                {
                    _Topic = base.CreateObjectSet<Topic>("Topic");
                }
                return _Topic;
            }
        }
        private ObjectSet<Topic> _Topic;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Comment> Comment
        {
            get
            {
                if ((_Comment == null))
                {
                    _Comment = base.CreateObjectSet<Comment>("Comment");
                }
                return _Comment;
            }
        }
        private ObjectSet<Comment> _Comment;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Attachment> Attachment
        {
            get
            {
                if ((_Attachment == null))
                {
                    _Attachment = base.CreateObjectSet<Attachment>("Attachment");
                }
                return _Attachment;
            }
        }
        private ObjectSet<Attachment> _Attachment;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GeneralSide> GeneralSide
        {
            get
            {
                if ((_GeneralSide == null))
                {
                    _GeneralSide = base.CreateObjectSet<GeneralSide>("GeneralSide");
                }
                return _GeneralSide;
            }
        }
        private ObjectSet<GeneralSide> _GeneralSide;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Source> Source
        {
            get
            {
                if ((_Source == null))
                {
                    _Source = base.CreateObjectSet<Source>("Source");
                }
                return _Source;
            }
        }
        private ObjectSet<Source> _Source;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RichText> RichText
        {
            get
            {
                if ((_RichText == null))
                {
                    _RichText = base.CreateObjectSet<RichText>("RichText");
                }
                return _RichText;
            }
        }
        private ObjectSet<RichText> _RichText;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Annotation> Annotation
        {
            get
            {
                if ((_Annotation == null))
                {
                    _Annotation = base.CreateObjectSet<Annotation>("Annotation");
                }
                return _Annotation;
            }
        }
        private ObjectSet<Annotation> _Annotation;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StatsEvent> StatsEvent
        {
            get
            {
                if ((_StatsEvent == null))
                {
                    _StatsEvent = base.CreateObjectSet<StatsEvent>("StatsEvent");
                }
                return _StatsEvent;
            }
        }
        private ObjectSet<StatsEvent> _StatsEvent;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Session> Session
        {
            get
            {
                if ((_Session == null))
                {
                    _Session = base.CreateObjectSet<Session>("Session");
                }
                return _Session;
            }
        }
        private ObjectSet<Session> _Session;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Seat> Seat
        {
            get
            {
                if ((_Seat == null))
                {
                    _Seat = base.CreateObjectSet<Seat>("Seat");
                }
                return _Seat;
            }
        }
        private ObjectSet<Seat> _Seat;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MediaData> MediaDataSet
        {
            get
            {
                if ((_MediaDataSet == null))
                {
                    _MediaDataSet = base.CreateObjectSet<MediaData>("MediaDataSet");
                }
                return _MediaDataSet;
            }
        }
        private ObjectSet<MediaData> _MediaDataSet;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Person EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPerson(Person person)
        {
            base.AddObject("Person", person);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Discussion EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDiscussion(Discussion discussion)
        {
            base.AddObject("Discussion", discussion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ArgPoint EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToArgPoint(ArgPoint argPoint)
        {
            base.AddObject("ArgPoint", argPoint);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Topic EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTopic(Topic topic)
        {
            base.AddObject("Topic", topic);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Comment EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToComment(Comment comment)
        {
            base.AddObject("Comment", comment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Attachment EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAttachment(Attachment attachment)
        {
            base.AddObject("Attachment", attachment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GeneralSide EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGeneralSide(GeneralSide generalSide)
        {
            base.AddObject("GeneralSide", generalSide);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Source EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSource(Source source)
        {
            base.AddObject("Source", source);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RichText EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRichText(RichText richText)
        {
            base.AddObject("RichText", richText);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Annotation EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAnnotation(Annotation annotation)
        {
            base.AddObject("Annotation", annotation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StatsEvent EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStatsEvent(StatsEvent statsEvent)
        {
            base.AddObject("StatsEvent", statsEvent);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Session EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSession(Session session)
        {
            base.AddObject("Session", session);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Seat EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSeat(Seat seat)
        {
            base.AddObject("Seat", seat);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MediaDataSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMediaDataSet(MediaData mediaData)
        {
            base.AddObject("MediaDataSet", mediaData);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db", Name="Annotation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Annotation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Annotation object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="vectGraphics">Initial value of the VectGraphics property.</param>
        /// <param name="thumb">Initial value of the Thumb property.</param>
        /// <param name="canvWidth">Initial value of the CanvWidth property.</param>
        /// <param name="canvHeight">Initial value of the CanvHeight property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Annotation CreateAnnotation(global::System.Int32 id, global::System.Byte[] vectGraphics, global::System.Byte[] thumb, global::System.Int32 canvWidth, global::System.Int32 canvHeight, global::System.String name)
        {
            Annotation annotation = new Annotation();
            annotation.Id = id;
            annotation.VectGraphics = vectGraphics;
            annotation.Thumb = thumb;
            annotation.CanvWidth = canvWidth;
            annotation.CanvHeight = canvHeight;
            annotation.Name = name;
            return annotation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Bg
        {
            get
            {
                return StructuralObject.GetValidValue(_Bg);
            }
            set
            {
                OnBgChanging(value);
                ReportPropertyChanging("Bg");
                _Bg = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Bg");
                OnBgChanged();
            }
        }
        private global::System.Byte[] _Bg;
        partial void OnBgChanging(global::System.Byte[] value);
        partial void OnBgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] VectGraphics
        {
            get
            {
                return StructuralObject.GetValidValue(_VectGraphics);
            }
            set
            {
                OnVectGraphicsChanging(value);
                ReportPropertyChanging("VectGraphics");
                _VectGraphics = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("VectGraphics");
                OnVectGraphicsChanged();
            }
        }
        private global::System.Byte[] _VectGraphics;
        partial void OnVectGraphicsChanging(global::System.Byte[] value);
        partial void OnVectGraphicsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Thumb
        {
            get
            {
                return StructuralObject.GetValidValue(_Thumb);
            }
            set
            {
                OnThumbChanging(value);
                ReportPropertyChanging("Thumb");
                _Thumb = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Thumb");
                OnThumbChanged();
            }
        }
        private global::System.Byte[] _Thumb;
        partial void OnThumbChanging(global::System.Byte[] value);
        partial void OnThumbChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CanvWidth
        {
            get
            {
                return _CanvWidth;
            }
            set
            {
                OnCanvWidthChanging(value);
                ReportPropertyChanging("CanvWidth");
                _CanvWidth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CanvWidth");
                OnCanvWidthChanged();
            }
        }
        private global::System.Int32 _CanvWidth;
        partial void OnCanvWidthChanging(global::System.Int32 value);
        partial void OnCanvWidthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CanvHeight
        {
            get
            {
                return _CanvHeight;
            }
            set
            {
                OnCanvHeightChanging(value);
                ReportPropertyChanging("CanvHeight");
                _CanvHeight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CanvHeight");
                OnCanvHeightChanged();
            }
        }
        private global::System.Int32 _CanvHeight;
        partial void OnCanvHeightChanging(global::System.Int32 value);
        partial void OnCanvHeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "PersonScreenshot", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("db.PersonScreenshot", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("db.PersonScreenshot", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("db.PersonScreenshot", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("db.PersonScreenshot", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "DiscussionAnnotation", "Discussion")]
        public Discussion Discussion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Discussion>("db.DiscussionAnnotation", "Discussion").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Discussion>("db.DiscussionAnnotation", "Discussion").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Discussion> DiscussionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Discussion>("db.DiscussionAnnotation", "Discussion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Discussion>("db.DiscussionAnnotation", "Discussion", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db", Name="ArgPoint")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ArgPoint : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ArgPoint object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="point">Initial value of the Point property.</param>
        /// <param name="sideCode">Initial value of the SideCode property.</param>
        /// <param name="sharedToPublic">Initial value of the SharedToPublic property.</param>
        /// <param name="recentlyEnteredSource">Initial value of the RecentlyEnteredSource property.</param>
        /// <param name="recentlyEnteredMediaUrl">Initial value of the RecentlyEnteredMediaUrl property.</param>
        /// <param name="changesPending">Initial value of the ChangesPending property.</param>
        /// <param name="orderNumber">Initial value of the OrderNumber property.</param>
        public static ArgPoint CreateArgPoint(global::System.Int32 id, global::System.String point, global::System.Int32 sideCode, global::System.Boolean sharedToPublic, global::System.String recentlyEnteredSource, global::System.String recentlyEnteredMediaUrl, global::System.Boolean changesPending, global::System.Int32 orderNumber)
        {
            ArgPoint argPoint = new ArgPoint();
            argPoint.Id = id;
            argPoint.Point = point;
            argPoint.SideCode = sideCode;
            argPoint.SharedToPublic = sharedToPublic;
            argPoint.RecentlyEnteredSource = recentlyEnteredSource;
            argPoint.RecentlyEnteredMediaUrl = recentlyEnteredMediaUrl;
            argPoint.ChangesPending = changesPending;
            argPoint.OrderNumber = orderNumber;
            return argPoint;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Point
        {
            get
            {
                return _Point;
            }
            set
            {
                OnPointChanging(value);
                ReportPropertyChanging("Point");
                _Point = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Point");
                OnPointChanged();
            }
        }
        private global::System.String _Point;
        partial void OnPointChanging(global::System.String value);
        partial void OnPointChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SideCode
        {
            get
            {
                return _SideCode;
            }
            set
            {
                OnSideCodeChanging(value);
                ReportPropertyChanging("SideCode");
                _SideCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SideCode");
                OnSideCodeChanged();
            }
        }
        private global::System.Int32 _SideCode;
        partial void OnSideCodeChanging(global::System.Int32 value);
        partial void OnSideCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean SharedToPublic
        {
            get
            {
                return _SharedToPublic;
            }
            set
            {
                OnSharedToPublicChanging(value);
                ReportPropertyChanging("SharedToPublic");
                _SharedToPublic = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SharedToPublic");
                OnSharedToPublicChanged();
            }
        }
        private global::System.Boolean _SharedToPublic;
        partial void OnSharedToPublicChanging(global::System.Boolean value);
        partial void OnSharedToPublicChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RecentlyEnteredSource
        {
            get
            {
                return _RecentlyEnteredSource;
            }
            set
            {
                OnRecentlyEnteredSourceChanging(value);
                ReportPropertyChanging("RecentlyEnteredSource");
                _RecentlyEnteredSource = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RecentlyEnteredSource");
                OnRecentlyEnteredSourceChanged();
            }
        }
        private global::System.String _RecentlyEnteredSource;
        partial void OnRecentlyEnteredSourceChanging(global::System.String value);
        partial void OnRecentlyEnteredSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RecentlyEnteredMediaUrl
        {
            get
            {
                return _RecentlyEnteredMediaUrl;
            }
            set
            {
                OnRecentlyEnteredMediaUrlChanging(value);
                ReportPropertyChanging("RecentlyEnteredMediaUrl");
                _RecentlyEnteredMediaUrl = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RecentlyEnteredMediaUrl");
                OnRecentlyEnteredMediaUrlChanged();
            }
        }
        private global::System.String _RecentlyEnteredMediaUrl;
        partial void OnRecentlyEnteredMediaUrlChanging(global::System.String value);
        partial void OnRecentlyEnteredMediaUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ChangesPending
        {
            get
            {
                return _ChangesPending;
            }
            set
            {
                OnChangesPendingChanging(value);
                ReportPropertyChanging("ChangesPending");
                _ChangesPending = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangesPending");
                OnChangesPendingChanged();
            }
        }
        private global::System.Boolean _ChangesPending;
        partial void OnChangesPendingChanging(global::System.Boolean value);
        partial void OnChangesPendingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderNumber
        {
            get
            {
                return _OrderNumber;
            }
            set
            {
                OnOrderNumberChanging(value);
                ReportPropertyChanging("OrderNumber");
                _OrderNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderNumber");
                OnOrderNumberChanged();
            }
        }
        private global::System.Int32 _OrderNumber;
        partial void OnOrderNumberChanging(global::System.Int32 value);
        partial void OnOrderNumberChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "TopicArgPoint", "Topic")]
        public Topic Topic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Topic>("db.TopicArgPoint", "Topic").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Topic>("db.TopicArgPoint", "Topic").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Topic> TopicReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Topic>("db.TopicArgPoint", "Topic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Topic>("db.TopicArgPoint", "Topic", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "ArgPointComment", "Comment")]
        public EntityCollection<Comment> Comment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Comment>("db.ArgPointComment", "Comment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Comment>("db.ArgPointComment", "Comment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "ArgPointAttachment", "Attachment")]
        public EntityCollection<Attachment> Attachment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Attachment>("db.ArgPointAttachment", "Attachment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Attachment>("db.ArgPointAttachment", "Attachment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "PersonArgPoint", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("db.PersonArgPoint", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("db.PersonArgPoint", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("db.PersonArgPoint", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("db.PersonArgPoint", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "ArgPointRichText", "RichText")]
        public RichText Description
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RichText>("db.ArgPointRichText", "RichText").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RichText>("db.ArgPointRichText", "RichText").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RichText> DescriptionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RichText>("db.ArgPointRichText", "RichText");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RichText>("db.ArgPointRichText", "RichText", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db", Name="Attachment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Attachment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Attachment object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="format">Initial value of the Format property.</param>
        /// <param name="link">Initial value of the Link property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        public static Attachment CreateAttachment(global::System.Int32 id, global::System.String name, global::System.Int32 format, global::System.String link, global::System.String title)
        {
            Attachment attachment = new Attachment();
            attachment.Id = id;
            attachment.Name = name;
            attachment.Format = format;
            attachment.Link = link;
            attachment.Title = title;
            return attachment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Format
        {
            get
            {
                return _Format;
            }
            set
            {
                OnFormatChanging(value);
                ReportPropertyChanging("Format");
                _Format = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Format");
                OnFormatChanged();
            }
        }
        private global::System.Int32 _Format;
        partial void OnFormatChanging(global::System.Int32 value);
        partial void OnFormatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VideoThumbURL
        {
            get
            {
                return _VideoThumbURL;
            }
            set
            {
                OnVideoThumbURLChanging(value);
                ReportPropertyChanging("VideoThumbURL");
                _VideoThumbURL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VideoThumbURL");
                OnVideoThumbURLChanged();
            }
        }
        private global::System.String _VideoThumbURL;
        partial void OnVideoThumbURLChanging(global::System.String value);
        partial void OnVideoThumbURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VideoEmbedURL
        {
            get
            {
                return _VideoEmbedURL;
            }
            set
            {
                OnVideoEmbedURLChanging(value);
                ReportPropertyChanging("VideoEmbedURL");
                _VideoEmbedURL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VideoEmbedURL");
                OnVideoEmbedURLChanged();
            }
        }
        private global::System.String _VideoEmbedURL;
        partial void OnVideoEmbedURLChanging(global::System.String value);
        partial void OnVideoEmbedURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VideoLinkURL
        {
            get
            {
                return _VideoLinkURL;
            }
            set
            {
                OnVideoLinkURLChanging(value);
                ReportPropertyChanging("VideoLinkURL");
                _VideoLinkURL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VideoLinkURL");
                OnVideoLinkURLChanged();
            }
        }
        private global::System.String _VideoLinkURL;
        partial void OnVideoLinkURLChanging(global::System.String value);
        partial void OnVideoLinkURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Link
        {
            get
            {
                return _Link;
            }
            set
            {
                OnLinkChanging(value);
                ReportPropertyChanging("Link");
                _Link = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Link");
                OnLinkChanged();
            }
        }
        private global::System.String _Link;
        partial void OnLinkChanging(global::System.String value);
        partial void OnLinkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Thumb
        {
            get
            {
                return StructuralObject.GetValidValue(_Thumb);
            }
            set
            {
                OnThumbChanging(value);
                ReportPropertyChanging("Thumb");
                _Thumb = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Thumb");
                OnThumbChanged();
            }
        }
        private global::System.Byte[] _Thumb;
        partial void OnThumbChanging(global::System.Byte[] value);
        partial void OnThumbChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "ArgPointAttachment", "ArgPoint")]
        public ArgPoint ArgPoint
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ArgPoint>("db.ArgPointAttachment", "ArgPoint").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ArgPoint>("db.ArgPointAttachment", "ArgPoint").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ArgPoint> ArgPointReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ArgPoint>("db.ArgPointAttachment", "ArgPoint");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ArgPoint>("db.ArgPointAttachment", "ArgPoint", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "PersonAttachment", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("db.PersonAttachment", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("db.PersonAttachment", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("db.PersonAttachment", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("db.PersonAttachment", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "DiscussionAttachment", "Discussion")]
        public Discussion Discussion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Discussion>("db.DiscussionAttachment", "Discussion").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Discussion>("db.DiscussionAttachment", "Discussion").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Discussion> DiscussionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Discussion>("db.DiscussionAttachment", "Discussion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Discussion>("db.DiscussionAttachment", "Discussion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "PersonAttachment1", "Person")]
        public Person PersonWithAvatar
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("db.PersonAttachment1", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("db.PersonAttachment1", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonWithAvatarReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("db.PersonAttachment1", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("db.PersonAttachment1", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "AttachmentMediaData", "MediaData")]
        public MediaData MediaData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MediaData>("db.AttachmentMediaData", "MediaData").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MediaData>("db.AttachmentMediaData", "MediaData").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MediaData> MediaDataReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MediaData>("db.AttachmentMediaData", "MediaData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MediaData>("db.AttachmentMediaData", "MediaData", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db", Name="Comment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Comment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Comment object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        public static Comment CreateComment(global::System.Int32 id, global::System.String text)
        {
            Comment comment = new Comment();
            comment.Id = id;
            comment.Text = text;
            return comment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "ArgPointComment", "ArgPoint")]
        public ArgPoint ArgPoint
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ArgPoint>("db.ArgPointComment", "ArgPoint").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ArgPoint>("db.ArgPointComment", "ArgPoint").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ArgPoint> ArgPointReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ArgPoint>("db.ArgPointComment", "ArgPoint");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ArgPoint>("db.ArgPointComment", "ArgPoint", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "PersonComment", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("db.PersonComment", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("db.PersonComment", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("db.PersonComment", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("db.PersonComment", "Person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db", Name="Discussion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Discussion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Discussion object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="subject">Initial value of the Subject property.</param>
        public static Discussion CreateDiscussion(global::System.Int32 id, global::System.String subject)
        {
            Discussion discussion = new Discussion();
            discussion.Id = id;
            discussion.Subject = subject;
            return discussion;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Subject
        {
            get
            {
                return _Subject;
            }
            set
            {
                OnSubjectChanging(value);
                ReportPropertyChanging("Subject");
                _Subject = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Subject");
                OnSubjectChanged();
            }
        }
        private global::System.String _Subject;
        partial void OnSubjectChanging(global::System.String value);
        partial void OnSubjectChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "DiscussionTopic", "Topic")]
        public EntityCollection<Topic> Topic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Topic>("db.DiscussionTopic", "Topic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Topic>("db.DiscussionTopic", "Topic", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "DiscussionAttachment", "Attachment")]
        public EntityCollection<Attachment> Attachment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Attachment>("db.DiscussionAttachment", "Attachment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Attachment>("db.DiscussionAttachment", "Attachment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "DiscussionGeneralSide", "GeneralSide")]
        public EntityCollection<GeneralSide> GeneralSide
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GeneralSide>("db.DiscussionGeneralSide", "GeneralSide");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GeneralSide>("db.DiscussionGeneralSide", "GeneralSide", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "DiscussionRichText", "RichText")]
        public RichText Background
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RichText>("db.DiscussionRichText", "RichText").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RichText>("db.DiscussionRichText", "RichText").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RichText> BackgroundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RichText>("db.DiscussionRichText", "RichText");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RichText>("db.DiscussionRichText", "RichText", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db", Name="GeneralSide")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GeneralSide : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GeneralSide object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="side">Initial value of the Side property.</param>
        public static GeneralSide CreateGeneralSide(global::System.Int32 id, global::System.Int32 side)
        {
            GeneralSide generalSide = new GeneralSide();
            generalSide.Id = id;
            generalSide.Side = side;
            return generalSide;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Side
        {
            get
            {
                return _Side;
            }
            set
            {
                OnSideChanging(value);
                ReportPropertyChanging("Side");
                _Side = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Side");
                OnSideChanged();
            }
        }
        private global::System.Int32 _Side;
        partial void OnSideChanging(global::System.Int32 value);
        partial void OnSideChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "PersonGeneralSide", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("db.PersonGeneralSide", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("db.PersonGeneralSide", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("db.PersonGeneralSide", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("db.PersonGeneralSide", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "DiscussionGeneralSide", "Discussion")]
        public Discussion Discussion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Discussion>("db.DiscussionGeneralSide", "Discussion").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Discussion>("db.DiscussionGeneralSide", "Discussion").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Discussion> DiscussionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Discussion>("db.DiscussionGeneralSide", "Discussion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Discussion>("db.DiscussionGeneralSide", "Discussion", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db", Name="MediaData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MediaData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MediaData object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static MediaData CreateMediaData(global::System.Int32 id)
        {
            MediaData mediaData = new MediaData();
            mediaData.Id = id;
            return mediaData;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Data
        {
            get
            {
                return StructuralObject.GetValidValue(_Data);
            }
            set
            {
                OnDataChanging(value);
                ReportPropertyChanging("Data");
                _Data = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Data");
                OnDataChanged();
            }
        }
        private global::System.Byte[] _Data;
        partial void OnDataChanging(global::System.Byte[] value);
        partial void OnDataChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "AttachmentMediaData", "Attachment")]
        public Attachment Attachment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attachment>("db.AttachmentMediaData", "Attachment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attachment>("db.AttachmentMediaData", "Attachment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Attachment> AttachmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attachment>("db.AttachmentMediaData", "Attachment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Attachment>("db.AttachmentMediaData", "Attachment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db", Name="Person")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Person : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Person object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="color">Initial value of the Color property.</param>
        /// <param name="online">Initial value of the Online property.</param>
        /// <param name="onlineDevType">Initial value of the OnlineDevType property.</param>
        public static Person CreatePerson(global::System.String name, global::System.String email, global::System.Int32 id, global::System.Int32 color, global::System.Boolean online, global::System.Int32 onlineDevType)
        {
            Person person = new Person();
            person.Name = name;
            person.Email = email;
            person.Id = id;
            person.Color = color;
            person.Online = online;
            person.OnlineDevType = onlineDevType;
            return person;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Color
        {
            get
            {
                return _Color;
            }
            set
            {
                OnColorChanging(value);
                ReportPropertyChanging("Color");
                _Color = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Color");
                OnColorChanged();
            }
        }
        private global::System.Int32 _Color;
        partial void OnColorChanging(global::System.Int32 value);
        partial void OnColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Online
        {
            get
            {
                return _Online;
            }
            set
            {
                OnOnlineChanging(value);
                ReportPropertyChanging("Online");
                _Online = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Online");
                OnOnlineChanged();
            }
        }
        private global::System.Boolean _Online;
        partial void OnOnlineChanging(global::System.Boolean value);
        partial void OnOnlineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SeatId
        {
            get
            {
                return _SeatId;
            }
            set
            {
                OnSeatIdChanging(value);
                ReportPropertyChanging("SeatId");
                _SeatId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SeatId");
                OnSeatIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SeatId;
        partial void OnSeatIdChanging(Nullable<global::System.Int32> value);
        partial void OnSeatIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OnlineDevType
        {
            get
            {
                return _OnlineDevType;
            }
            set
            {
                OnOnlineDevTypeChanging(value);
                ReportPropertyChanging("OnlineDevType");
                _OnlineDevType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OnlineDevType");
                OnOnlineDevTypeChanged();
            }
        }
        private global::System.Int32 _OnlineDevType;
        partial void OnOnlineDevTypeChanging(global::System.Int32 value);
        partial void OnOnlineDevTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SessionId
        {
            get
            {
                return _SessionId;
            }
            set
            {
                OnSessionIdChanging(value);
                ReportPropertyChanging("SessionId");
                _SessionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SessionId");
                OnSessionIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SessionId;
        partial void OnSessionIdChanging(Nullable<global::System.Int32> value);
        partial void OnSessionIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "TopicPerson", "Topic")]
        public EntityCollection<Topic> Topic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Topic>("db.TopicPerson", "Topic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Topic>("db.TopicPerson", "Topic", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "PersonArgPoint", "ArgPoint")]
        public EntityCollection<ArgPoint> ArgPoint
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ArgPoint>("db.PersonArgPoint", "ArgPoint");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ArgPoint>("db.PersonArgPoint", "ArgPoint", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "PersonComment", "Comment")]
        public EntityCollection<Comment> Comment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Comment>("db.PersonComment", "Comment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Comment>("db.PersonComment", "Comment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "PersonAttachment", "Attachment")]
        public EntityCollection<Attachment> Attachment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Attachment>("db.PersonAttachment", "Attachment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Attachment>("db.PersonAttachment", "Attachment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "PersonGeneralSide", "GeneralSide")]
        public EntityCollection<GeneralSide> GeneralSide
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GeneralSide>("db.PersonGeneralSide", "GeneralSide");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GeneralSide>("db.PersonGeneralSide", "GeneralSide", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "PersonScreenshot", "Screenshot")]
        public EntityCollection<Annotation> Screenshot
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Annotation>("db.PersonScreenshot", "Screenshot");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Annotation>("db.PersonScreenshot", "Screenshot", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "PersonAttachment1", "Attachment")]
        public Attachment AvatarAttachment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attachment>("db.PersonAttachment1", "Attachment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attachment>("db.PersonAttachment1", "Attachment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Attachment> AvatarAttachmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attachment>("db.PersonAttachment1", "Attachment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Attachment>("db.PersonAttachment1", "Attachment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "PersonSeat", "Seat")]
        public Seat Seat
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Seat>("db.PersonSeat", "Seat").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Seat>("db.PersonSeat", "Seat").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Seat> SeatReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Seat>("db.PersonSeat", "Seat");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Seat>("db.PersonSeat", "Seat", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "PersonSession", "Session")]
        public Session Session
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Session>("db.PersonSession", "Session").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Session>("db.PersonSession", "Session").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Session> SessionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Session>("db.PersonSession", "Session");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Session>("db.PersonSession", "Session", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db", Name="RichText")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RichText : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RichText object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        public static RichText CreateRichText(global::System.Int32 id, global::System.String text)
        {
            RichText richText = new RichText();
            richText.Id = id;
            richText.Text = text;
            return richText;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "RichTextSource", "Source")]
        public EntityCollection<Source> Source
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Source>("db.RichTextSource", "Source");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Source>("db.RichTextSource", "Source", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "DiscussionRichText", "Discussion")]
        public Discussion Discussion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Discussion>("db.DiscussionRichText", "Discussion").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Discussion>("db.DiscussionRichText", "Discussion").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Discussion> DiscussionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Discussion>("db.DiscussionRichText", "Discussion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Discussion>("db.DiscussionRichText", "Discussion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "ArgPointRichText", "ArgPoint")]
        public ArgPoint ArgPoint
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ArgPoint>("db.ArgPointRichText", "ArgPoint").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ArgPoint>("db.ArgPointRichText", "ArgPoint").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ArgPoint> ArgPointReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ArgPoint>("db.ArgPointRichText", "ArgPoint");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ArgPoint>("db.ArgPointRichText", "ArgPoint", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db", Name="Seat")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Seat : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Seat object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="color">Initial value of the Color property.</param>
        /// <param name="seatName">Initial value of the SeatName property.</param>
        public static Seat CreateSeat(global::System.Int32 id, global::System.Int32 color, global::System.String seatName)
        {
            Seat seat = new Seat();
            seat.Id = id;
            seat.Color = color;
            seat.SeatName = seatName;
            return seat;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Color
        {
            get
            {
                return _Color;
            }
            set
            {
                OnColorChanging(value);
                ReportPropertyChanging("Color");
                _Color = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Color");
                OnColorChanged();
            }
        }
        private global::System.Int32 _Color;
        partial void OnColorChanging(global::System.Int32 value);
        partial void OnColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SeatName
        {
            get
            {
                return _SeatName;
            }
            set
            {
                OnSeatNameChanging(value);
                ReportPropertyChanging("SeatName");
                _SeatName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SeatName");
                OnSeatNameChanged();
            }
        }
        private global::System.String _SeatName;
        partial void OnSeatNameChanging(global::System.String value);
        partial void OnSeatNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "PersonSeat", "Person")]
        public EntityCollection<Person> Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("db.PersonSeat", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("db.PersonSeat", "Person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db", Name="Session")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Session : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Session object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="estimatedDateTime">Initial value of the EstimatedDateTime property.</param>
        /// <param name="estimatedTimeSlot">Initial value of the EstimatedTimeSlot property.</param>
        /// <param name="estimatedEndDateTime">Initial value of the EstimatedEndDateTime property.</param>
        public static Session CreateSession(global::System.Int32 id, global::System.String name, global::System.DateTime estimatedDateTime, global::System.Int32 estimatedTimeSlot, global::System.DateTime estimatedEndDateTime)
        {
            Session session = new Session();
            session.Id = id;
            session.Name = name;
            session.EstimatedDateTime = estimatedDateTime;
            session.EstimatedTimeSlot = estimatedTimeSlot;
            session.EstimatedEndDateTime = estimatedEndDateTime;
            return session;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EstimatedDateTime
        {
            get
            {
                return _EstimatedDateTime;
            }
            set
            {
                OnEstimatedDateTimeChanging(value);
                ReportPropertyChanging("EstimatedDateTime");
                _EstimatedDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstimatedDateTime");
                OnEstimatedDateTimeChanged();
            }
        }
        private global::System.DateTime _EstimatedDateTime;
        partial void OnEstimatedDateTimeChanging(global::System.DateTime value);
        partial void OnEstimatedDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EstimatedTimeSlot
        {
            get
            {
                return _EstimatedTimeSlot;
            }
            set
            {
                OnEstimatedTimeSlotChanging(value);
                ReportPropertyChanging("EstimatedTimeSlot");
                _EstimatedTimeSlot = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstimatedTimeSlot");
                OnEstimatedTimeSlotChanged();
            }
        }
        private global::System.Int32 _EstimatedTimeSlot;
        partial void OnEstimatedTimeSlotChanging(global::System.Int32 value);
        partial void OnEstimatedTimeSlotChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EstimatedEndDateTime
        {
            get
            {
                return _EstimatedEndDateTime;
            }
            set
            {
                OnEstimatedEndDateTimeChanging(value);
                ReportPropertyChanging("EstimatedEndDateTime");
                _EstimatedEndDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstimatedEndDateTime");
                OnEstimatedEndDateTimeChanged();
            }
        }
        private global::System.DateTime _EstimatedEndDateTime;
        partial void OnEstimatedEndDateTimeChanging(global::System.DateTime value);
        partial void OnEstimatedEndDateTimeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "PersonSession", "Person")]
        public EntityCollection<Person> Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("db.PersonSession", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("db.PersonSession", "Person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db", Name="Source")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Source : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Source object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        public static Source CreateSource(global::System.Int32 id, global::System.String text)
        {
            Source source = new Source();
            source.Id = id;
            source.Text = text;
            return source;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "RichTextSource", "RichText")]
        public RichText RichText
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RichText>("db.RichTextSource", "RichText").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RichText>("db.RichTextSource", "RichText").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RichText> RichTextReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RichText>("db.RichTextSource", "RichText");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RichText>("db.RichTextSource", "RichText", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db", Name="StatsEvent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StatsEvent : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StatsEvent object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="event">Initial value of the Event property.</param>
        /// <param name="discussionId">Initial value of the DiscussionId property.</param>
        /// <param name="discussionName">Initial value of the DiscussionName property.</param>
        /// <param name="topicId">Initial value of the TopicId property.</param>
        /// <param name="topicName">Initial value of the TopicName property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="time">Initial value of the Time property.</param>
        /// <param name="deviceType">Initial value of the DeviceType property.</param>
        public static StatsEvent CreateStatsEvent(global::System.Int32 id, global::System.Int32 @event, global::System.Int32 discussionId, global::System.String discussionName, global::System.Int32 topicId, global::System.String topicName, global::System.Int32 userId, global::System.String userName, global::System.DateTime time, global::System.Int32 deviceType)
        {
            StatsEvent statsEvent = new StatsEvent();
            statsEvent.Id = id;
            statsEvent.Event = @event;
            statsEvent.DiscussionId = discussionId;
            statsEvent.DiscussionName = discussionName;
            statsEvent.TopicId = topicId;
            statsEvent.TopicName = topicName;
            statsEvent.UserId = userId;
            statsEvent.UserName = userName;
            statsEvent.Time = time;
            statsEvent.DeviceType = deviceType;
            return statsEvent;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Event
        {
            get
            {
                return _Event;
            }
            set
            {
                OnEventChanging(value);
                ReportPropertyChanging("Event");
                _Event = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Event");
                OnEventChanged();
            }
        }
        private global::System.Int32 _Event;
        partial void OnEventChanging(global::System.Int32 value);
        partial void OnEventChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DiscussionId
        {
            get
            {
                return _DiscussionId;
            }
            set
            {
                OnDiscussionIdChanging(value);
                ReportPropertyChanging("DiscussionId");
                _DiscussionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DiscussionId");
                OnDiscussionIdChanged();
            }
        }
        private global::System.Int32 _DiscussionId;
        partial void OnDiscussionIdChanging(global::System.Int32 value);
        partial void OnDiscussionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiscussionName
        {
            get
            {
                return _DiscussionName;
            }
            set
            {
                OnDiscussionNameChanging(value);
                ReportPropertyChanging("DiscussionName");
                _DiscussionName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DiscussionName");
                OnDiscussionNameChanged();
            }
        }
        private global::System.String _DiscussionName;
        partial void OnDiscussionNameChanging(global::System.String value);
        partial void OnDiscussionNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TopicId
        {
            get
            {
                return _TopicId;
            }
            set
            {
                OnTopicIdChanging(value);
                ReportPropertyChanging("TopicId");
                _TopicId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TopicId");
                OnTopicIdChanged();
            }
        }
        private global::System.Int32 _TopicId;
        partial void OnTopicIdChanging(global::System.Int32 value);
        partial void OnTopicIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TopicName
        {
            get
            {
                return _TopicName;
            }
            set
            {
                OnTopicNameChanging(value);
                ReportPropertyChanging("TopicName");
                _TopicName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TopicName");
                OnTopicNameChanged();
            }
        }
        private global::System.String _TopicName;
        partial void OnTopicNameChanging(global::System.String value);
        partial void OnTopicNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Time
        {
            get
            {
                return _Time;
            }
            set
            {
                OnTimeChanging(value);
                ReportPropertyChanging("Time");
                _Time = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Time");
                OnTimeChanged();
            }
        }
        private global::System.DateTime _Time;
        partial void OnTimeChanging(global::System.DateTime value);
        partial void OnTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DeviceType
        {
            get
            {
                return _DeviceType;
            }
            set
            {
                OnDeviceTypeChanging(value);
                ReportPropertyChanging("DeviceType");
                _DeviceType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeviceType");
                OnDeviceTypeChanged();
            }
        }
        private global::System.Int32 _DeviceType;
        partial void OnDeviceTypeChanging(global::System.Int32 value);
        partial void OnDeviceTypeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="db", Name="Topic")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Topic : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Topic object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="running">Initial value of the Running property.</param>
        /// <param name="cumulativeDuration">Initial value of the CumulativeDuration property.</param>
        public static Topic CreateTopic(global::System.Int32 id, global::System.String name, global::System.Boolean running, global::System.Int32 cumulativeDuration)
        {
            Topic topic = new Topic();
            topic.Id = id;
            topic.Name = name;
            topic.Running = running;
            topic.CumulativeDuration = cumulativeDuration;
            return topic;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Annotation
        {
            get
            {
                return StructuralObject.GetValidValue(_Annotation);
            }
            set
            {
                OnAnnotationChanging(value);
                ReportPropertyChanging("Annotation");
                _Annotation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Annotation");
                OnAnnotationChanged();
            }
        }
        private global::System.Byte[] _Annotation;
        partial void OnAnnotationChanging(global::System.Byte[] value);
        partial void OnAnnotationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Running
        {
            get
            {
                return _Running;
            }
            set
            {
                OnRunningChanging(value);
                ReportPropertyChanging("Running");
                _Running = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Running");
                OnRunningChanged();
            }
        }
        private global::System.Boolean _Running;
        partial void OnRunningChanging(global::System.Boolean value);
        partial void OnRunningChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CumulativeDuration
        {
            get
            {
                return _CumulativeDuration;
            }
            set
            {
                OnCumulativeDurationChanging(value);
                ReportPropertyChanging("CumulativeDuration");
                _CumulativeDuration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CumulativeDuration");
                OnCumulativeDurationChanged();
            }
        }
        private global::System.Int32 _CumulativeDuration;
        partial void OnCumulativeDurationChanging(global::System.Int32 value);
        partial void OnCumulativeDurationChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "TopicArgPoint", "ArgPoint")]
        public EntityCollection<ArgPoint> ArgPoint
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ArgPoint>("db.TopicArgPoint", "ArgPoint");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ArgPoint>("db.TopicArgPoint", "ArgPoint", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "DiscussionTopic", "Discussion")]
        public Discussion Discussion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Discussion>("db.DiscussionTopic", "Discussion").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Discussion>("db.DiscussionTopic", "Discussion").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Discussion> DiscussionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Discussion>("db.DiscussionTopic", "Discussion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Discussion>("db.DiscussionTopic", "Discussion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("db", "TopicPerson", "Person")]
        public EntityCollection<Person> Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("db.TopicPerson", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("db.TopicPerson", "Person", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
